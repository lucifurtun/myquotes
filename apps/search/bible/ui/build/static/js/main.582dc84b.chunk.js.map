{"version":3,"sources":["redux/chapter.js","redux/verse.js","redux/filters.js","components/Search.js","components/Dropdown.js","components/FiltersForm.js","redux/index.js","components/Verse.js","components/InfiniteList.js","redux/book.js","redux/versions.js","redux/api.js","redux/ui.js","redux/store.js","redux/version.js","components/VersionInfos.js","components/Version.js","components/Layout.js","components/Spinner.js","components/VersionsSelector.js","components/Header.js","components/VerseOptions.js","App.js","serviceWorker.js","index.js"],"names":["initialState","data","count","page","hasMore","selected","getVerses","bookTitle","type","payload","request","url","params","book_title","chapter_number","arguments","length","undefined","search","page_size","saga","handleChangeBook","handleChangeChapter","handleSearch","handleFormChange","book","chapter","verse","regenerator_default","a","wrap","_context","prev","next","takeEvery","stop","_marked","this","_ref","_context2","put","formChange","_marked2","_ref2","_context3","_marked3","filtersValues","_context4","select","state","filters","sent","_marked4","formValues","_context5","t0","field","abrupt","_marked5","value","Search","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleKeyPress","e","key","onSearch","textInput","current","React","createRef","_this2","react_default","createElement","className","onKeyPress","placeholder","style","height","ref","onChange","dispatch","onClick","Component","connect","name","options","preparedValue","label","react_select_esm","styles","clearIndicator","provided","objectSpread","paddingLeft","paddingRight","dropdownIndicator","isClearable","event","books","values","map","item","title","chapters","number","currentBook","handleSubmit","onSubmit","Dropdown","components_Search","stores","isSelected","text","text_highlight","x","pageX","y","pageY","console","log","root","identifier","handleOnClick","onBlur","verseOptions","document","getElementById","contains","relatedTarget","handleOnBlur","tabIndex","marginRight","dangerouslySetInnerHTML","__html","html","InfiniteList","handleScroll","offset","scroll","verseOptionsDisplayed","isMobile","scrollHeight","body","scrollTop","documentElement","window","innerHeight","offsetHeight","element","verseWrapper","isLoading","loadData","onscroll","_this$props","setState","_this3","onScroll","verses","i","array","index","previousItem","isUndefined","isFirstBookOccurrence","isFirstChapterOccurrence","components_Verse","nextProps","prevState","api","versionOptions","vdcc","short","long","ntr","esv","addNewVersion","existingItems","newVersionName","version","indexes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","keys","Symbol","iterator","done","v","_split","split","_split2","slicedToArray","push","toInteger","err","return","nextIndex","isEmpty","max","newKey","concat","defineProperty","id","label_short","label_long","addVersion","setVersion","handleRequest","SUCCESS_SUFFIX","ERROR_SUFFIX","client","axios","create","baseURL","process","responseType","storeName","action","response","error","api_marked","api_marked2","innerWidth","display","rootSaga","all","filtersSaga","apiSaga","store_marked","persistConfig","storage","whitelist","rootReducer","combineReducers","versions","newVersionItem","omit","store","ui","has","persistedRootReducer","persistReducer","versionReducer","results","isFirstPage","toConsumableArray","has_more","onRemove","aria-hidden","Version","sagaMiddleware","createSagaMiddleware","createReduxStore","applyMiddleware","run","subscribe","getState","createVersionStore","Provider","components_VersionInfos","components_FiltersForm","components_InfiniteList","cols","layoutClasses","components_Version","Spinner","show","width","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","buttonStyle","buttonText","DropdownButton","bsStyle","MenuItem","header","eventKey","role","fontSize","target","href","components_VersionsSelector","components_Spinner","left","top","preventDefault","content","navigator","clipboard","writeText","App","setTimeout","components_Header","components_VerseOptions","components_Layout","Boolean","location","hostname","match","createStore","persistor","persistStore","ReactDOM","render","es","integration_react","loading","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.582dc84b.chunk.js","sourcesContent":["const initialState = {\n    data: [],\n    count: null\n}\n\nexport function reducer(state = initialState, action = {}) {\n    switch(action.type) {\n        case 'GET_CHAPTERS_SUCCESS':\n            return {\n                data: action.payload.data.results,\n                count: action.payload.data.count\n            }\n        default:\n            return state\n    }\n}\n\nexport function getChapters(bookTitle) {\n    return {\n        type: 'GET_CHAPTERS',\n        payload: {\n            request: {\n                url: '/chapters/',\n                params: {\n                    book_title: bookTitle,\n                    page_size: 1000\n                }\n            }\n        }\n    }\n}\n","const initialState = {\n    data: [],\n    count: null,\n    page: null,\n    hasMore: null,\n    selected: null\n}\n\n\nexport function reducer(state = initialState, action = {}) {\n    switch(action.type) {\n        case 'GET_VERSES_SUCCESS':\n            let response = action.payload.data\n\n            let data = isFirstPage(response) ? response.results : [...state.data, ...response.results]\n\n            return {\n                ...state,\n                data: data,\n                count: response.count,\n                page: response.page,\n                hasMore: response.has_more\n            }\n        case 'SET_SELECTED_VERSE':\n            return {\n                ...state,\n                selected: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nfunction isFirstPage(response) {\n    return response.page === 1\n}\n\n\nexport function getVerses(bookTitle, chapterNumber = null, search = null, page = null) {\n    const url = '/verses/'\n\n    return {\n        type: 'GET_VERSES',\n        payload: {\n            request: {\n                url: url,\n                params: {\n                    book_title: bookTitle,\n                    chapter_number: chapterNumber,\n                    search: search,\n                    page: page,\n                    page_size: 100\n                }\n            }\n        }\n    }\n}\n","import { takeEvery, put, select } from 'redux-saga/effects'\nimport { getChapters } from './chapter'\nimport { getVerses } from './verse'\n\nconst initialState = {\n    book: null,\n    chapter: null,\n    verse: null,\n    search: null\n}\n\nexport function reducer(state = initialState, action = {}) {\n    switch(action.type) {\n        case 'FORM_CHANGE':\n            return {\n                ...state,\n                [action.payload.field]: action.payload.value\n            }\n        default:\n            return state\n    }\n}\n\nexport function* saga() {\n    yield takeEvery('VERSE_SEARCH', handleSearch)\n    yield takeEvery('FORM_CHANGE', handleFormChange)\n}\n\nfunction* handleChangeBook({ book, search }) {\n    if (book) {\n        yield put(getChapters(book))\n    }\n    else {\n        yield put(formChange('chapter', null))\n    }\n\n    yield put(getVerses(book, null, search))\n}\n\nfunction* handleChangeChapter({ book, chapter, search }) {\n    yield put(getVerses(book, chapter, search))\n}\n\nfunction* handleSearch() {\n    const filtersValues = yield select((state) => state.filters)\n\n    const { book, chapter, search } = filtersValues\n\n    yield put(getVerses(book, chapter, search, null))\n}\n\nfunction* handleFormChange(payload) {\n    const formValues = yield select((state) => state.filters)\n\n    switch(payload.payload.field) {\n        case 'book':\n            yield handleChangeBook(formValues)\n            break\n        case 'chapter':\n            yield handleChangeChapter(formValues)\n            break\n        default:\n            break\n    }\n}\n\nexport const formChange = (field, value) => ({\n    type: 'FORM_CHANGE',\n    payload: { field, value }\n})\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formChange } from '../redux/filters'\n\n\nclass Search extends Component {\n    constructor(props) {\n        super(props)\n        this.textInput = React.createRef()\n    }\n\n    handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            this.search()\n        }\n    }\n\n    search = () => {\n        const { onSearch } = this.props\n        let searchValue = this.textInput.current.value\n        onSearch(searchValue)\n    }\n\n    render() {\n        return (\n            <div className=\"input-group\">\n                <input\n                    type=\"text\"\n                    onKeyPress={this.handleKeyPress}\n                    className=\"form-control\"\n                    placeholder=\"Search...\"\n                    style={{ height: '38px' }}\n                    ref={this.textInput}\n                    onChange={() => this.props.dispatch(formChange('search', this.textInput.current.value || null))}\n                />\n                <span className=\"input-group-btn\">\n                <button\n                    onClick={this.search}\n                    className=\"btn btn-default\"\n                    style={{ height: '38px' }}\n                    type=\"button\">Go!\n                </button>\n                </span>\n            </div>\n        )\n    }\n}\n\nexport default connect()(Search)\n","import React from 'react'\n\nimport Select from 'react-select'\nimport { connect } from 'react-redux'\nimport { formChange } from '../redux/filters'\n\nconst DropDown = ({ name, options, placeholder, value, dispatch }) => {\n    const preparedValue = value ? { value: value, label: value } : null\n\n    return (\n        <Select\n            styles={{\n                clearIndicator: (provided, state) => ({\n                        ...provided,\n                        paddingLeft: '0',\n                        paddingRight: '0',\n                    }\n                ),\n                dropdownIndicator: (provided, state) => ({\n                        ...provided,\n                        paddingLeft: '0',\n                        paddingRight: '0',\n                    }\n                )\n            }}\n            isClearable\n            options={options}\n            value={preparedValue}\n            placeholder={placeholder}\n            onChange={(event) => dispatch(formChange(name, event ? event.value : null))}\n        />\n    )\n}\n\nexport default connect()(DropDown)\n","import React from 'react'\nimport Search from './Search'\nimport connect from 'react-redux/es/connect/connect'\nimport { values } from 'lodash'\nimport DropDown from './Dropdown'\n\nlet FiltersForm = props => {\n    const { handleSubmit, books, book, chapters, chapter, dispatch } = props\n    return (\n        <div>\n            <form className=\"filters-form\" onSubmit={handleSubmit}>\n                <div className='row'>\n                    <div className='col-sm-5 filter-item'>\n                        <DropDown\n                            name='book'\n                            placeholder='Book'\n                            options={books}\n                            value={book}\n                        />\n                    </div>\n                    <div className='col-sm-3 filter-item'>\n                        <DropDown\n                            name='chapter'\n                            placeholder='Chapter'\n                            options={chapters}\n                            value={chapter}\n                        />\n                    </div>\n                    <div className='col-sm-4 filter-item'>\n                        <Search\n                            onSearch={(value) => dispatch({ type: 'VERSE_SEARCH', payload: value })}\n                        />\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n\nfunction mapStateToProps(state, props) {\n    const books = values(state.books.data).map((item) => ({ value: item.title, label: item.title }))\n    const chapters = values(state.chapters.data).map((item) => ({\n        value: item.number,\n        label: item.number\n    }))\n\n    const currentBook = state.filters.book\n    const currentChapter = state.filters.chapter\n\n    return {\n        books: books,\n        book: currentBook,\n        chapters: currentBook ? chapters : [],\n        chapter: currentChapter\n    }\n}\n\nexport default connect(mapStateToProps)(FiltersForm)\n","export let stores = {}\n","import React from 'react'\nimport { stores } from '../redux'\nimport { connect } from 'react-redux'\n\nconst html = (text) => ({ __html: text })\n\nconst handleOnClick = (event, item, dispatch) => {\n    const payload = {\n        x: event.pageX,\n        y: event.pageY,\n        verse: item\n    }\n\n    console.log(payload)\n\n    stores.root.dispatch({ type: 'SHOW_VERSE_OPTIONS', payload: payload })\n    dispatch({ type: 'SET_SELECTED_VERSE', payload: item.identifier })\n\n}\n\nconst handleOnBlur = (event, item, dispatch) => {\n    // FIXME: Hackish workaround for verse options.\n    const verseOptions = document.getElementById('verse-options')\n\n    if (verseOptions === null || !verseOptions.contains(event.relatedTarget)) {\n        stores.root.dispatch({ type: 'HIDE_VERSE_OPTIONS' })\n        dispatch({ type: 'SET_SELECTED_VERSE', payload: null })\n    }\n}\n\nconst Verse = ({ item, isSelected, dispatch }) => {\n    const text = item.text_highlight ? item.text_highlight : item.text\n\n    return (\n        <div\n            onClick={(event) => handleOnClick(event, item, dispatch)}\n            onBlur={(event) => handleOnBlur(event, item, dispatch)}\n            tabIndex={0}\n            className={'verse' + (isSelected ? ' selected' : '')}\n        >\n            <span className=\"verse-number\" style={{ marginRight: '2px' }}>{item.number}.</span>\n            <span className=\"verse-text\" dangerouslySetInnerHTML={html(text)}/>\n        </div>\n    )\n}\n\nexport default connect()(Verse)\n","import React, { Component } from 'react'\nimport Verse from './Verse'\nimport { connect } from 'react-redux'\nimport { getVerses } from '../redux/verse'\nimport { isUndefined } from 'lodash'\nimport { stores } from '../redux'\n\nfunction isFirstChapterOccurrence(item, index, array) {\n    const previousItem = array[index - 1]\n    if (isUndefined(previousItem)) {\n        return true\n    }\n\n    return previousItem.chapter_number !== item.chapter_number\n}\n\nfunction isFirstBookOccurrence(item, index, array) {\n    const previousItem = array[index - 1]\n    if (isUndefined(previousItem)) {\n        return true\n    }\n\n    return previousItem.book_title !== item.book_title\n}\n\nclass InfiniteList extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isLoading: false\n        }\n\n        this.verseWrapper = React.createRef()\n    }\n\n    componentDidMount() {\n        window.onscroll = () => {\n            this.handleScroll()\n        }\n    }\n\n    handleScroll = (event) => {\n        let offset, scroll\n\n        if (this.props.verseOptionsDisplayed) {\n            stores.root.dispatch({ type: 'HIDE_VERSE_OPTIONS' })\n        }\n\n        if (this.props.isMobile === true) {\n            let scrollHeight = document.body.scrollTop || document.documentElement.scrollTop\n            scroll = window.innerHeight + scrollHeight\n            offset = document.documentElement.offsetHeight\n        } else {\n            let element = this.verseWrapper.current\n            let scrollHeight = element.scrollTop\n            scroll = element.offsetHeight + scrollHeight\n            offset = element.scrollHeight\n        }\n\n        if (scroll >= offset - 450) {\n            if (!this.state.isLoading) {\n                this.loadData()\n            }\n        }\n    }\n\n    loadData() {\n        const { dispatch, filters, page, hasMore } = this.props\n\n        if (hasMore) {\n            this.setState({ isLoading: true })\n            dispatch(getVerses(filters.book, filters.chapter, filters.search, page ? page + 1 : page))\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.isLoading !== prevState.isLoading) {\n            if (nextProps.isLoading === false) {\n                return { isLoading: false }\n            }\n        }\n\n        return null\n    }\n\n    render() {\n        return (\n            <div ref={this.verseWrapper} className=\"verses-wrapper\" onScroll={this.handleScroll}>\n                {this.props.verses.map(\n                    (item, i, array) => {\n                        const isSelected = item.identifier === this.props.selected\n                        return (\n                            <div key={i}>\n                                {\n                                    isFirstBookOccurrence(item, i, array) &&\n                                    <h2 className=\"verse-book\">{item.book_title}</h2>\n                                }\n                                {\n                                    isFirstChapterOccurrence(item, i, array) &&\n                                    <h3 className=\"verse-chapter\">{item.chapter_number}</h3>\n                                }\n                                <Verse item={item} isSelected={isSelected}/>\n                            </div>\n                        )\n                    }\n                )}\n\n                {!this.props.verses.length && <h4 className=\"no-results\">No results...</h4>}\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    const verses = state.verses.data\n    const page = state.verses.page\n    const hasMore = state.verses.hasMore\n    const selected = state.verses.selected\n    const isLoading = state.api.isLoading\n    const filters = state.filters\n\n    return {\n        verses,\n        page,\n        hasMore,\n        selected,\n        isLoading,\n        filters\n    }\n}\n\nexport default connect(mapStateToProps)(InfiniteList)\n","const initialState = {\n    data: [],\n    count: null\n}\n\nexport function reducer(state = initialState, action = {}) {\n    switch(action.type) {\n        case 'GET_BOOKS_SUCCESS':\n            return {\n                data: action.payload.data.results,\n                count: action.payload.data.count\n            }\n        default:\n            return state\n    }\n}\n\nexport function getBooks() {\n    return {\n        type: 'GET_BOOKS',\n        payload: {\n            request: {\n                url: '/books/',\n                params: {\n                    page_size: 1000\n                }\n            }\n        }\n    }\n}\n","import { isEmpty, keys, max, omit, split, toInteger } from 'lodash'\nimport { stores } from '.'\n\nconst versionOptions = {\n    vdcc: {\n        short: 'VDCC',\n        long: 'Versiunea Dumitru Cornilescu Corectată'\n    },\n    ntr: {\n        short: 'NTR',\n        long: 'Noua Traducere Românească'\n    },\n    esv: {\n        short: 'ESV',\n        long: 'English Standard Version'\n    }\n}\n\nfunction addNewVersion(existingItems, newVersionName) {\n    let version, index\n\n    let indexes = []\n\n    for (let v of keys(existingItems)) {\n        [version, index] = split(v, '__')\n\n        if (version === newVersionName) {\n            indexes.push(toInteger(index))\n        }\n    }\n\n    const nextIndex = isEmpty(indexes) ? 1 : max(indexes) + 1\n    const newKey = `${newVersionName}__${nextIndex}`\n\n    return {\n        [newKey]: {\n            id: newKey,\n            name: newVersionName,\n            index: nextIndex,\n            label_short: versionOptions[newVersionName].short,\n            label_long: versionOptions[newVersionName].long\n        }\n    }\n}\n\n\nconst initialState = { ...addNewVersion({}, 'vdcc') }\n\n\nexport function reducer(state = initialState, action = {}) {\n    let newVersionName, newVersionItem\n\n    switch(action.type) {\n        case 'ADD_VERSION':\n            newVersionName = action.payload\n            newVersionItem = addNewVersion(state, newVersionName)\n\n            return { ...state, ...newVersionItem }\n\n        case 'REMOVE_VERSION':\n            delete stores[action.payload]\n            return omit(state, action.payload)\n\n        case 'SET_VERSION':\n            for (let store in keys(stores)) {\n                delete stores[store]\n            }\n\n            newVersionName = action.payload\n            newVersionItem = addNewVersion(state, newVersionName)\n\n            return { ...newVersionItem }\n\n        default:\n            return state\n    }\n}\n\nexport function addVersion(version) {\n    return ({\n        type: 'ADD_VERSION',\n        payload: version\n    })\n}\n\nexport function removeVersion(version) {\n    return ({\n        type: 'REMOVE_VERSION',\n        payload: version\n    })\n}\n\nexport function setVersion(version) {\n    return ({\n        type: 'SET_VERSION',\n        payload: version\n    })\n}","import { has, split } from 'lodash'\nimport { call, takeEvery, put } from 'redux-saga/effects'\nimport axios from 'axios'\n\nconst initialState = {\n    isLoading: false\n}\n\nexport function reducer(state = initialState, action = {}) {\n    if (has(action.payload, 'request')) {\n        if (has(action.payload, 'status')) {\n            return {\n                isLoading: false\n            }\n        } else {\n            return {\n                isLoading: true\n            }\n        }\n    }\n\n    if (has(action, 'error')) {\n        return {\n            isLoading: false\n        }\n    }\n\n    return state\n}\n\nexport const SUCCESS_SUFFIX = '_SUCCESS'\nexport const ERROR_SUFFIX = '_FAIL'\n\nconst client = axios.create({\n    baseURL: process.env.REACT_APP_API_URL,\n    responseType: 'json'\n})\n\nfunction* handleRequest(storeName, action) {\n    const { type, payload: { request } } = action\n    const [version] = split(storeName, '__')\n\n    const url = request.url + `${version}/`\n\n    try {\n        const response = yield call(client, url, { params: request.params })\n        yield put({ type: type + SUCCESS_SUFFIX, payload: response })\n    } catch (errorResponse) {\n        yield put({ type: type + ERROR_SUFFIX, payload: { error: errorResponse } })\n    }\n}\n\nexport function* saga(storeName) {\n    yield takeEvery(['GET_VERSES', 'GET_BOOKS', 'GET_CHAPTERS'], handleRequest, storeName)\n}\n","import { has } from 'lodash'\n\nconst initialState = {\n    isLoading: false,\n    isMobile: window.innerWidth < 768,\n    verseOptions: {\n        display: false,\n        x: 0,\n        y: 0\n    }\n}\n\nexport function reducer(state = initialState, action = {}) {\n    if (has(action.payload, 'request')) {\n        if (has(action.payload, 'status')) {\n            return {\n                ...state,\n                isLoading: false\n            }\n        } else {\n            return {\n                ...state,\n                isLoading: true\n            }\n        }\n    }\n\n    if (has(action, 'error')) {\n        return {\n            ...state,\n            isLoading: false\n        }\n    }\n\n    switch(action.type) {\n        case 'SHOW_VERSE_OPTIONS':\n            return {\n                ...state,\n                verseOptions: {\n                    display: true,\n                    ...action.payload\n                }\n            }\n        case 'HIDE_VERSE_OPTIONS':\n            return {\n                ...state,\n                verseOptions: {\n                    display: false,\n                    ...action.payload\n                }\n            }\n        default:\n            return state\n    }\n}\n","import { createStore as createReduxStore, applyMiddleware, combineReducers } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { all } from 'redux-saga/effects'\n\nimport { reducer as bookReducer } from './book'\nimport { reducer as chapterReducer } from './chapter'\nimport { reducer as verseReducer } from './verse'\nimport { reducer as versionsReducer } from './versions'\nimport { reducer as currentVersionReducer } from './version'\nimport { reducer as apiReducer } from './api'\nimport { reducer as uiReducer } from './ui'\nimport { reducer as filtersReducer } from './filters'\nimport storage from 'redux-persist/lib/storage'\nimport { persistReducer } from 'redux-persist'\nimport { stores } from './index'\n\nimport { saga as filtersSaga } from './filters'\nimport { saga as apiSaga } from './api'\n\n\nfunction* rootSaga(name) {\n    yield all([\n        filtersSaga(name),\n        apiSaga(name)\n    ])\n}\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['versions']\n}\n\n\nconst rootReducer = combineReducers({\n    versions: versionsReducer,\n    ui: uiReducer,\n})\n\nconst persistedRootReducer = persistReducer(persistConfig, rootReducer)\n\nconst versionReducer = combineReducers({\n    books: bookReducer,\n    chapters: chapterReducer,\n    verses: verseReducer,\n    filters: filtersReducer,\n    api: apiReducer,\n    version: currentVersionReducer,\n})\n\n\nexport function createStore(initialState = {}) {\n    const sagaMiddleware = createSagaMiddleware()\n\n    const store = createReduxStore(\n        persistedRootReducer,\n        initialState,\n        applyMiddleware(sagaMiddleware)\n    )\n\n    sagaMiddleware.run(rootSaga)\n\n    const name = 'root'\n\n    stores[name] = store\n    store.subscribe(() => {\n        console.log(name, store.getState())\n    })\n\n    return store\n}\n\nexport function createVersionStore(name, initialState = {}) {\n    const sagaMiddleware = createSagaMiddleware()\n\n    const store = createReduxStore(\n        versionReducer,\n        initialState,\n        applyMiddleware(sagaMiddleware)\n    )\n\n    sagaMiddleware.run(rootSaga, name)\n\n    stores[name] = store\n    store.subscribe(() => {\n        console.log(name, store.getState())\n    })\n\n    return store\n}\n","export function reducer(state = {}, action = {}) {\n    switch(action.type) {\n        case 'SET_VERSION':\n            return action.payload\n        default:\n            return state\n    }\n}\n","import React from 'react'\nimport connect from 'react-redux/es/connect/connect'\n\nconst VersionInfos = ({ isMobile, onRemove, version }) => {\n    return (\n        <div className=\"infos-wrapper\">\n            {\n                !isMobile &&\n                <button onClick={onRemove} className=\"close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            }\n            <span>{version.label_short} ({version.label_long})</span>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    const version = state.version\n\n    return {\n        version\n    }\n}\n\nexport default connect(mapStateToProps)(VersionInfos)\n","import React, { Component } from 'react'\nimport FiltersForm from './FiltersForm'\nimport InfiniteList from './InfiniteList'\nimport Provider from 'react-redux/es/components/Provider'\nimport { createVersionStore } from '../redux/store'\nimport { getBooks } from '../redux/book'\nimport { getVerses } from '../redux/verse'\nimport { removeVersion } from '../redux/versions'\nimport { connect } from 'react-redux'\nimport VersionInfos from './VersionInfos'\n\n\nclass Version extends Component {\n    constructor(props) {\n        super(props)\n\n        const store = createVersionStore(this.props.item.id)\n        store.dispatch({ type: 'SET_VERSION', payload: this.props.item })\n        store.dispatch(getBooks())\n        store.dispatch(getVerses())\n        this.store = store\n    }\n\n    render() {\n        return (\n            <Provider store={this.store}>\n                <div className=\"panel panel-default\">\n                    <div className=\"version-controls panel-heading\">\n                        <VersionInfos\n                            isMobile={this.props.isMobile}\n                            onRemove={() => this.props.dispatch(removeVersion(this.props.item.id))}\n                        />\n\n                    </div>\n                    <div className=\"panel-body\">\n                        <FiltersForm/>\n                        <InfiniteList\n                            isMobile={this.props.isMobile}\n                            verseOptionsDisplayed={this.props.verseOptionsDisplayed}\n                        />\n                    </div>\n                </div>\n            </Provider>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const isMobile = state.ui.isMobile\n    const verseOptionsDisplayed = state.ui.verseOptions.display\n\n    return { isMobile, verseOptionsDisplayed }\n}\n\nexport default connect(mapStateToProps)(Version)\n","import React from 'react'\nimport connect from 'react-redux/es/connect/connect'\nimport { values } from 'lodash'\nimport Version from './Version'\nimport { toInteger } from 'lodash'\n\nconst Layout = ({ versions }) => {\n    const cols = toInteger(12 / versions.length)\n    const layoutClasses = 'col-lg-' + cols + ' col-md-' + cols + ' col-sm-' + cols\n\n    return (\n        <div className='translation-wrapper clearfix'>\n            {versions.map((item) => (\n                <div key={item.id} className={'translation ' + layoutClasses}>\n                    <Version key={item.id} item={item}/>\n                </div>\n            ))}\n\n            {!versions.length && <h4 className=\"no-results\">No version selected. Please select one!</h4>}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    const versions = values(state.versions)\n    return {\n        versions\n    }\n}\n\nexport default connect(mapStateToProps)(Layout)\n","import React from 'react'\n\nconst Spinner = ({show}) => {\n    if (!show) {\n        return null\n    }\n\n    return (\n        <div className=\"spinner\">\n            <svg width=\"30px\" height=\"30px\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle fill=\"none\" strokeWidth=\"5\" strokeLinecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\" className=\"circle\"/>\n            </svg>\n        </div>\n    )\n}\n\nexport default Spinner\n","import React from 'react'\nimport connect from 'react-redux/es/connect/connect'\nimport { values } from 'lodash'\nimport { addVersion, setVersion } from '../redux/versions'\nimport { DropdownButton, MenuItem } from 'react-bootstrap'\n\nconst VersionsSelector = ({ versions, isMobile, dispatch }) => {\n    let action, buttonStyle, buttonText\n\n    if (isMobile) {\n        action = setVersion\n        buttonStyle = 'primary'\n        buttonText = 'Set Version'\n    } else {\n        action = addVersion\n        buttonStyle = 'success'\n        buttonText = 'Add Version'\n    }\n\n    return (\n        <div className=\"version-selector-wrapper\">\n            <DropdownButton bsStyle={buttonStyle} title={buttonText} id='add-version-dropdown'>\n                <MenuItem header><span className=\"flag-icon flag-icon-ro\"/> Romanian</MenuItem>\n                <MenuItem onClick={() => dispatch(action('vdcc'))} eventKey=\"1\">\n                    VDCC\n                </MenuItem>\n                <MenuItem onClick={() => dispatch(action('ntr'))} eventKey=\"2\">\n                    NTR\n                </MenuItem>\n                <MenuItem header><span className=\"flag-icon flag-icon-gb\"/> English</MenuItem>\n                <MenuItem onClick={() => dispatch(action('esv'))} eventKey=\"3\">\n                    ESV\n                </MenuItem>\n            </DropdownButton>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    const versions = values(state.versions).map((item) => ({ value: item, label: item }))\n    const isMobile = state.ui.isMobile\n\n    return {\n        versions,\n        isMobile\n    }\n}\n\nexport default connect(mapStateToProps)(VersionsSelector)\n","import React from 'react'\nimport connect from 'react-redux/es/connect/connect'\nimport Spinner from './Spinner'\nimport VersionsSelector from './VersionsSelector'\n\nconst Header = ({ isLoading, isMobile }) => {\n    return (\n        <nav className=\"navbar navbar-default navbar-static-top\" role=\"navigation\">\n            <a style={{ fontSize: '20px' }} className=\"navbar-brand\" target=\"_self\" href=\"/\">Bible</a>\n            <VersionsSelector/>\n            <Spinner show={isLoading}/>\n        </nav>\n    )\n}\n\nfunction mapStateToProps(state) {\n    const isLoading = state.ui.isLoading\n\n    return {\n        isLoading\n    }\n}\n\nexport default connect(mapStateToProps)(Header)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { stores } from '../redux'\n\nconst VerseOptions = ({ options }) => {\n    if (!options.display) {\n        return null\n    }\n\n    return (\n        <ul className=\"dropdown-menu\" style={{ left: `${options.x}px`, top: `${options.y}px` }} id=\"verse-options\">\n            <li onClick={(event) => {\n                event.preventDefault()\n\n                const v = options.verse\n                const content = `[${v.book_title} ${v.chapter_number}:${v.number}] ${v.text}`\n\n                navigator.clipboard.writeText(content)\n                stores.root.dispatch({ type: 'HIDE_VERSE_OPTIONS' })\n            }}\n            >\n                <a href=\"#\">Copy</a>\n            </li>\n        </ul>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        options: state.ui.verseOptions\n    }\n}\n\nexport default connect(mapStateToProps)(VerseOptions)\n","import React, { Component } from 'react'\n\nimport './App.css'\nimport Layout from './components/Layout'\nimport Header from './components/Header'\nimport VerseOptions from './components/VerseOptions'\n\nclass App extends Component {\n    componentDidMount() {\n        setTimeout(() => document.getElementById('loader').style.display = 'none', 250)\n        // document.addEventListener('click', (event) => {\n        //     const verseOptions = document.getElementById('verse-options')\n        //     const verseElement = document.getElementsByClassName('verses-wrapper')\n        //     console.log(verseElement)\n        //     console.log(verseOptions.contains(event.target))\n        //     console.log(verseElement[0].contains(event.target))\n        //\n        //     stores.root.dispatch({ type: 'HIDE_VERSE_OPTIONS' })\n        // })\n    }\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <VerseOptions/>\n                <div id=\"page-wrapper\">\n                    <div className=\"row\">\n                        <div id=\"content-wrapper\" className=\"clearfix\">\n                            <div className=\"App clearfix\">\n                                <Layout/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { persistStore } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\n\n\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore } from './redux/store'\n\nconst store = createStore()\nconst persistor = persistStore(store)\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App store={store}/>\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}