{"version":3,"sources":["serviceWorker.js","redux/ui.js","components/Modal.js","redux/authors.js","redux/categories.js","redux/tags.js","redux/quotes.js","redux/filters.js","components/Search.js","components/CurrentUser.js","components/MobileMenu.js","components/TopBar.js","components/FilterDelete.js","components/FilterItem.js","components/FilterForm.js","redux/routing.js","components/Filter.js","components/QuotesSidebar.js","components/QuoteForm.js","components/QuoteDelete.js","components/Quote.js","components/Spinner.js","components/QuotesOverlay.js","components/Offline.js","components/QuotesList.js","screens/Quotes.js","screens/Login.js","screens/Signup.js","screens/InactiveAccount.js","redux/user.js","screens/Settings.js","routing.js","components/RouterManager.js","components/Router.js","redux/app.js","App.js","redux/auth.js","redux/api.js","redux/store.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","modal","showModal","type","payload","connect","_ref","title","content","dispatch","react_default","a","createElement","es_Modal","show","onHide","Header","closeButton","Title","data","getAuthors","request","url","params","arguments","length","undefined","method","performRemoveAuthorRequest","author","state","concat","id","token","user","headers","client","delete","getCategories","performRemoveCategoryRequest","quote","getTags","performRemoveTagRequest","handleQuoteSaveSuccess","saga","errors","count","page","hasMore","routing","regenerator_default","wrap","_context","prev","next","put","select","sent","user__username","has","username","stop","_marked","_context2","takeEvery","_marked2","getQuotes","performRemoveQuoteRequest","handleFilterChange","FILTER_CHANGED","SEARCH_CHANGED","categories","Set","authors","tags","search","snapshot","filters","category","toArray","filters_marked","filters_marked2","updateFilter","tag","removeFilter","getState","then","response","Object","objectSpread","removeCategory","_useState","useState","_useState2","slicedToArray","searchText","setSearchTest","className","placeholder","onChange","event","target","value","onKeyPress","key","onClick","index_esm","width","height","currentUser","withRouter","history","style","marginRight","email","DropdownButton","MenuItem","push","eventKey","logout","toggled","Collapse","in","timeout","role","components_Search","react_router_dom","to","href","preventDefault","TopBar","mobileMenuToggled","setMobileMenuToggled","components_MobileMenu","padding","components_CurrentUser","filter","Fragment","Body","name","Footer","Button","bsStyle","FilterItem","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEditFinished","item","setState","editMode","checked","inherits","createClass","_this2","_this$props","onDoubleClick","ref","input","focus","onBlur","components_FilterDelete","getDeleteFilterModal","verticalAlign","marginLeft","color","nextValue","htmlFor","React","Component","quotes","setValue","onSubmit","display","paddingRight","defaultValue","join","source","createFilter","UPDATE_ROUTE","RoutingParamsContext","createContext","reducersMapping","Filter","context","collapsed","panelBodyMaxHeight","innerHeight","action","upperFirst","cursor","components_FilterForm","maxHeight","map","components_FilterItem","field","changeFilter","contextType","defaultProps","values","Sidebar","components_Filter","defaultValues","omit","inputs","setInputs","updateQuote","createQuote","maxLength","defineProperty","private","dist_react_select_browser_esm","cacheOptions","isClearable","author_name","label","defaultOptions","loadOptions","inputValue","Promise","resolve","get","result","paddingLeft","react_select_browser_esm","category_name","options","reference","isMulti","tags_name","ckeditor_default","text","config","toolbar","editor","getData","removeQuote","user_id","components_QuoteForm","getEditQuoteModal","components_QuoteDelete","getDeleteQuiteModal","dangerouslySetInnerHTML","__html","Spinner","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","isLoading","position","zIndex","backgroundColor","opacity","components_Spinner","Alert","reload","QuotesList","components_QuotesOverlay","components_Quote","isOnline","components_Offline","textAlign","marginBottom","float","minWidth","maxWidth","loadData","orderBy","api","components_TopBar","Provider","store","size","QuotesSidebar","components_QuotesList","password","auth","non_field_errors","error","idx","autoFocus","required","e","login","password1","password2","signup","UPDATE_USER_SUCCESS","console","log","minHeight","marginTop","first_name","last_name","Route","path","component","isPublic","ROUTES","Quotes","Login","Signup","InactiveAccount","Settings","isAuthenticated","isNull","route","useEffect","react_router","Router","exact","render","components_RouterManager","handleAppInitialization","INITIALIZE","INITIALIZED","app_marked","app_marked2","createBrowserHistory","App","replace","components_Router","components_Modal","ui","handleLoginSuccess","handleUserUnauthenticated","redirectToLogin","handleLogout","handleSignupSuccess","setHeaders","Authorization","auth_marked","auth_marked2","_context3","_marked3","_context4","_marked4","_context5","_marked5","_context6","_marked6","handleReload","handleRequest","pendingRequests","REQUEST_STARTED","REQUEST_FINISHED","API_IS_OFFLINE","RELOAD","SUCCESS_SUFFIX","ERROR_SUFFIX","axios","create","baseURL","process","responseType","paramsSerializer","qs","arrayFormat","skipNulls","forEach","defaults","common","api_marked","userToken","t0","status","api_marked2","interceptors","use","reject","API_ACTIONS","api_marked3","rootSaga","all","authSaga","quotesSaga","apiSaga","filtersSaga","appSaga","store_marked","persistConfig","storage","whitelist","rootReducer","combineReducers","currentPendingRequests","resultByKey","keyBy","results","isFirstPage","has_more","newState","newSet","add","app","persistedRootReducer","persistReducer","__webpack_require__","d","__webpack_exports__","src_store","sagaMiddleware","createSagaMiddleware","createReduxStore","applyMiddleware","thunk","run","subscribe","createRootStore","persistor","persistStore","ReactDOM","react_redux_es","integration_react","loading","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44796ace.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    modal: null\n}\n\n\nexport function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case 'SHOW_MODAL':\n            return {\n                ...state,\n                modal: action.payload\n            }\n        case 'HIDE_MODAL':\n            return {\n                ...state,\n                modal: null\n            }\n        default:\n            return state\n    }\n}\n\nexport function showModal(modal) {\n    return {\n        type: 'SHOW_MODAL',\n        payload: modal\n    }\n}\n\nexport function hideModal() {\n    return {\n        type: 'HIDE_MODAL'\n    }\n}\n","import React from 'react'\nimport { Modal as BootstrapModal } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { hideModal } from '../redux/ui'\n\n\nconst Modal = ({title, content, dispatch}) => {\n    return (\n        <BootstrapModal show={true} onHide={() => dispatch(hideModal())}>\n            <BootstrapModal.Header closeButton>\n                <BootstrapModal.Title>{title}</BootstrapModal.Title>\n            </BootstrapModal.Header>\n            {content}\n        </BootstrapModal>\n    )\n}\n\nexport default connect()(Modal)\n","import { keyBy, omit } from 'lodash'\nimport { hideModal } from \"./ui\";\nimport { client } from \"./api\";\n\nconst initialState = {\n    data: []\n}\n\nexport function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case 'GET_AUTHORS_SUCCESS':\n            let response = action.payload.data\n\n            return {\n                data: keyBy(response, 'id')\n            }\n        case 'CREATE_AUTHOR_SUCCESS':\n        case 'GET_AUTHOR_SUCCESS':\n            return {\n                data: {\n                    ...state.data,\n                    [action.payload.data.id]: action.payload.data\n                }\n            }\n        case 'DELETE_AUTHOR_SUCCESS':\n            const author = action.payload.data\n\n            return {\n                ...state,\n                errors: {},\n                data: omit(state.data, author.id)\n            }\n        default:\n            return state\n    }\n}\n\n\nexport const getAuthors = (params = {}) => {\n    const url = '/authors/'\n\n    return (\n        {\n            type: 'GET_AUTHORS',\n            payload: {\n                request: {\n                    url,\n                    params,\n                    method: 'GET'\n                }\n            }\n        }\n    )\n}\n\nexport const createAuthor = (author) => {\n    const url = '/authors/'\n\n    return (\n        {\n            type: 'CREATE_AUTHOR',\n            payload: {\n                request: {\n                    url: url,\n                    method: 'POST',\n                    data: author\n                }\n            }\n        }\n    )\n}\n\nexport const updateAuthor = (author) => {\n    const url = `/authors/${author.id}/`\n\n    return (\n        {\n            type: 'UPDATE_AUTHOR',\n            payload: {\n                request: {\n                    url: url,\n                    method: 'PATCH',\n                    data: author\n                }\n            }\n        }\n    )\n}\n\nexport const removeAuthor = (author) => {\n    return function (dispatch, getState) {\n        const state = getState()\n\n        return performRemoveAuthorRequest(author, state).then(\n            (response) => {\n                dispatch({type: 'DELETE_AUTHOR_SUCCESS', payload: {data: {...author}}})\n                dispatch(hideModal())\n            }\n        )\n    }\n}\n\nexport const performRemoveAuthorRequest = (author, state) => {\n    const url = `/authors/${author.id}/`\n    const token = state.user.token\n    let headers = {}\n\n    if (token) {\n        headers['Authorization'] = `JWT ${token}`\n    }\n\n    return client.delete(url, {headers})\n}\n","import { keyBy, omit } from 'lodash'\nimport { hideModal } from \"./ui\";\nimport { client } from \"./api\";\n\nconst initialState = {\n    data: []\n}\n\nexport function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case 'GET_CATEGORIES_SUCCESS':\n            let response = action.payload.data\n\n            return {\n                data: keyBy(response, 'id')\n            }\n        case 'CREATE_CATEGORY_SUCCESS':\n        case 'GET_CATEGORY_SUCCESS':\n            return {\n                data: {\n                    ...state.data,\n                    [action.payload.data.id]: action.payload.data\n                }\n            }\n        case 'DELETE_CATEGORY_SUCCESS':\n            const category = action.payload.data\n\n            return {\n                ...state,\n                errors: {},\n                data: omit(state.data, category.id)\n            }\n        default:\n            return state\n    }\n}\n\n\nexport const getCategories = (params = {}) => {\n    const url = '/categories/'\n\n    return (\n        {\n            type: 'GET_CATEGORIES',\n            payload: {\n                request: {\n                    url,\n                    params,\n                    method: 'GET'\n                }\n            }\n        }\n    )\n}\n\nexport const getCategory = (id) => {\n    const url = `/categories/${id}`\n\n    return (\n        {\n            type: 'GET_CATEGORY',\n            payload: {\n                request: {\n                    url: url,\n                    method: 'GET'\n                }\n            }\n        }\n    )\n}\n\nexport const createCategory = (category) => {\n    const url = '/categories/'\n\n    return (\n        {\n            type: 'CREATE_CATEGORY',\n            payload: {\n                request: {\n                    url: url,\n                    method: 'POST',\n                    data: category\n                }\n            }\n        }\n    )\n}\n\nexport const updateCategory = (category) => {\n    const url = `/categories/${category.id}/`\n\n    return (\n        {\n            type: 'UPDATE_CATEGORY',\n            payload: {\n                request: {\n                    url: url,\n                    method: 'PATCH',\n                    data: category\n                }\n            }\n        }\n    )\n}\n\nexport const removeCategory = (author) => {\n    return function (dispatch, getState) {\n        const state = getState()\n\n        return performRemoveCategoryRequest(author, state).then(\n            (response) => {\n                dispatch({type: 'DELETE_CATEGORY_SUCCESS', payload: {data: {...author}}})\n                dispatch(hideModal())\n            }\n        )\n    }\n}\n\nexport const performRemoveCategoryRequest = (quote, state) => {\n    const url = `/categories/${quote.id}/`\n    const token = state.user.token\n    let headers = {}\n\n    if (token) {\n        headers['Authorization'] = `JWT ${token}`\n    }\n\n    return client.delete(url, {headers})\n}\n","import { keyBy, omit } from 'lodash'\nimport { hideModal } from \"./ui\";\nimport { client } from \"./api\";\n\nconst initialState = {\n    data: []\n}\n\nexport function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case 'GET_TAGS_SUCCESS':\n            let response = action.payload.data\n\n            return {\n                data: keyBy(response, 'id')\n            }\n        case 'CREATE_TAG_SUCCESS':\n        case 'GET_TAG_SUCCESS':\n            return {\n                data: {\n                    ...state.data,\n                    [action.payload.data.id]: action.payload.data\n                }\n            }\n        case 'DELETE_TAG_SUCCESS':\n            const tag = action.payload.data\n\n            return {\n                ...state,\n                errors: {},\n                data: omit(state.data, tag.id)\n            }\n        default:\n            return state\n    }\n}\n\n\nexport const getTags = (params = {}) => {\n    const url = '/tags/'\n\n    return (\n        {\n            type: 'GET_TAGS',\n            payload: {\n                request: {\n                    url,\n                    params,\n                    method: 'GET'\n                }\n            }\n        }\n    )\n}\n\nexport const createTag = (tag) => {\n    const url = '/tags/'\n\n    return (\n        {\n            type: 'CREATE_TAG',\n            payload: {\n                request: {\n                    url: url,\n                    method: 'POST',\n                    data: tag\n                }\n            }\n        }\n    )\n}\n\nexport const updateTag = (tag) => {\n    const url = `/tags/${tag.id}/`\n\n    return (\n        {\n            type: 'UPDATE_TAG',\n            payload: {\n                request: {\n                    url: url,\n                    method: 'PATCH',\n                    data: tag\n                }\n            }\n        }\n    )\n}\n\nexport const removeTag = (tag) => {\n    return function (dispatch, getState) {\n        const state = getState()\n\n        return performRemoveTagRequest(tag, state).then(\n            (response) => {\n                dispatch({type: 'DELETE_TAG_SUCCESS', payload: {data: {...tag}}})\n                dispatch(hideModal())\n            }\n        )\n    }\n}\n\nexport const performRemoveTagRequest = (quote, state) => {\n    const url = `/tags/${quote.id}/`\n    const token = state.user.token\n    let headers = {}\n\n    if (token) {\n        headers['Authorization'] = `JWT ${token}`\n    }\n\n    return client.delete(url, {headers})\n}\n\n","import { has, keyBy, omit } from 'lodash'\nimport { takeEvery, put, select } from 'redux-saga/effects'\nimport { hideModal } from './ui'\nimport { client } from './api'\nimport { getAuthors } from \"./authors\";\nimport { getCategories } from \"./categories\";\nimport { getTags } from \"./tags\";\n\nconst initialState = {\n    data: {},\n    errors: {},\n    count: null,\n    page: null,\n    hasMore: null\n}\n\nfunction isFirstPage(response) {\n    return response.page === 1\n}\n\nexport function reducer(state = initialState, action = {}) {\n    let quote\n\n    switch (action.type) {\n        case 'GET_QUOTES_SUCCESS':\n            let response = action.payload.data\n\n            const resultByKey = keyBy(response.results, 'id');\n            const data = isFirstPage(response) ? resultByKey : {...state.data, ...resultByKey}\n\n            return {\n                ...state,\n                data: data,\n                count: response.count,\n                page: response.page,\n                hasMore: response.has_more\n            }\n        case 'GET_QUOTE_SUCCESS':\n        case 'CREATE_QUOTE_SUCCESS':\n        case 'UPDATE_QUOTE_SUCCESS':\n            quote = action.payload.data\n\n            return {\n                ...state,\n                errors: {},\n                data: {\n                    ...state.data,\n                    [quote.id]: quote\n                }\n            }\n        case 'DELETE_QUOTE_SUCCESS':\n            quote = action.payload.data\n\n            return {\n                ...state,\n                errors: {},\n                data: omit(state.data, quote.id)\n            }\n        case 'CREATE_QUOTE_FAIL':\n        case 'UPDATE_QUOTE_FAIL':\n        case 'DELETE_QUOTE_FAIL':\n            return {\n                ...state,\n                errors: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nfunction* handleQuoteSaveSuccess(payload) {\n    yield put(hideModal())\n\n    const routing = yield select((state) => state.routing)\n\n    const params = {\n        user__username: has(routing.match.params, 'username') ? routing.match.params.username : null\n    }\n\n    yield put(getAuthors(params))\n    yield put(getCategories(params))\n    yield put(getTags(params))\n}\n\nexport function* saga() {\n    yield takeEvery(['UPDATE_QUOTE_SUCCESS', 'CREATE_QUOTE_SUCCESS'], handleQuoteSaveSuccess)\n}\n\n\nexport const getQuotes = (params = {}) => {\n    const url = '/quotes/'\n\n    return (\n        {\n            type: 'GET_QUOTES',\n            payload: {\n                request: {\n                    url: url,\n                    method: 'GET',\n                    params: params\n                }\n            }\n        }\n    )\n}\n\nexport const updateQuote = (quote) => {\n    const url = `/quotes/${quote.id}/`\n\n    return {\n        type: 'UPDATE_QUOTE',\n        payload: {\n            request: {\n                url: url,\n                method: 'PATCH',\n                data: quote\n            }\n        }\n    }\n}\n\nexport const createQuote = (quote) => {\n    const url = `/quotes/`\n\n    return {\n        type: 'CREATE_QUOTE',\n        payload: {\n            request: {\n                url: url,\n                method: 'POST',\n                data: quote\n            }\n        }\n    }\n}\n\nexport const deleteQuote = (quote) => {\n    const url = `/quotes/${quote.id}/`\n\n    return {\n        type: 'DELETE_QUOTE',\n        payload: {\n            request: {\n                url: url,\n                method: 'DELETE'\n            }\n        }\n    }\n}\n\nexport const removeQuote = (quote) => {\n    return function (dispatch, getState) {\n        const state = getState()\n\n        return performRemoveQuoteRequest(quote, state).then(\n            (response) => {\n                dispatch({type: 'DELETE_QUOTE_SUCCESS', payload: {data: {...quote}}})\n                dispatch(hideModal())\n            }\n        )\n    }\n}\n\nexport const performRemoveQuoteRequest = (quote, state) => {\n    const url = `/quotes/${quote.id}/`\n    const token = state.user.token\n    let headers = {}\n\n    if (token) {\n        headers['Authorization'] = `JWT ${token}`\n    }\n\n    return client.delete(url, {headers})\n}\n","import { put, select, takeEvery } from 'redux-saga/effects'\nimport { getQuotes } from './quotes'\nimport { has, toArray } from 'lodash'\nimport { createAuthor, removeAuthor, updateAuthor } from \"./authors\";\nimport { createCategory, removeCategory, updateCategory } from \"./categories\";\nimport { createTag, removeTag, updateTag } from \"./tags\";\n\nconst FILTER_CHANGED = 'FILTER_CHANGED'\nconst SEARCH_CHANGED = 'SEARCH_CHANGED'\n\nconst initialState = {\n    categories: new Set(),\n    authors: new Set(),\n    tags: new Set(),\n    search: null,\n    snapshot: {\n        categories: new Set(),\n        authors: new Set(),\n        tags: new Set(),\n        search: null,\n    }\n}\n\nexport function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case FILTER_CHANGED:\n            const id = action.payload.value\n            const field = action.payload.field\n            const checked = action.payload.checked\n            let newState\n\n            if (checked) {\n                const newSet = new Set(state[field])\n                newSet.add(id)\n                newState = newSet\n            } else {\n                const newSet = new Set(state[field])\n                newSet.delete(id)\n                newState = newSet\n            }\n\n            return {\n                ...state,\n                [field]: newState\n            }\n        case SEARCH_CHANGED:\n            return {\n                ...state,\n                search: action.payload.value\n            }\n        case 'SET_FILTERS':\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport function* handleFilterChange() {\n    const filters = yield select((state) => state.filters)\n    const routing = yield select((state) => state.routing)\n\n    const params = {\n        category: toArray(filters.categories),\n        author: toArray(filters.authors),\n        tags: toArray(filters.tags),\n        search: filters.search,\n        user__username: has(routing.match.params, 'username') ? routing.match.params.username : null\n    }\n\n    yield put(getQuotes(params))\n}\n\nexport function* saga() {\n    yield takeEvery(FILTER_CHANGED, handleFilterChange)\n    yield takeEvery(SEARCH_CHANGED, handleFilterChange)\n}\n\nexport const changeFilter = (field, value, checked) => ({\n    type: FILTER_CHANGED,\n    payload: {field, value, checked}\n})\n\n\nexport const changeSearch = (value) => ({\n    type: SEARCH_CHANGED,\n    payload: {value}\n})\n\nexport const createFilter = (type, data) => {\n    switch (type) {\n        case 'authors':\n            return createAuthor(data)\n        case 'categories':\n            return createCategory(data)\n        case 'tags':\n            return createTag(data)\n        default:\n            return null\n    }\n}\n\nexport const updateFilter = (type, data) => {\n    switch (type) {\n        case 'authors':\n            return updateAuthor(data)\n        case 'categories':\n            return updateCategory(data)\n        case 'tags':\n            return updateTag(data)\n        default:\n            return null\n    }\n}\n\nexport const removeFilter = (type, data) => {\n    switch (type) {\n        case 'authors':\n            return removeAuthor(data)\n        case 'categories':\n            return removeCategory(data)\n        case 'tags':\n            return removeTag(data)\n        default:\n            return null\n    }\n}\n","import React, { useState } from 'react'\nimport { FaSearch } from 'react-icons/fa'\nimport { connect } from 'react-redux'\nimport { getQuotes } from '../redux/quotes'\nimport { changeSearch } from '../redux/filters'\n\nconst Search = ({dispatch}) => {\n    const [searchText, setSearchTest] = useState('')\n\n    return (\n        <div className=\"sidebar-search\">\n            <div className=\"input-group custom-search-form\">\n                <input\n                    className=\"form-control\"\n                    placeholder=\"Search...\"\n                    onChange={(event) => setSearchTest(event.target.value)}\n                    onKeyPress={(event) => {\n                        if (event.key === 'Enter') {\n                            dispatch(changeSearch(searchText))\n                        }\n                    }}\n                    value={searchText}\n                />\n                <span className=\"input-group-btn\">\n                    <button\n                        className=\"btn btn-default\"\n                        onClick={() => {\n                            dispatch(getQuotes({search: searchText}))\n                        }}\n                    >\n                        <FaSearch width=\"13\" height=\"50\"/>\n                    </button>\n                </span>\n            </div>\n        </div>\n    )\n}\n\n\nexport default connect()(Search)\n","import React from 'react'\nimport { DropdownButton, MenuItem } from 'react-bootstrap'\nimport { FaUser } from 'react-icons/fa'\nimport { connect } from 'react-redux'\nimport { logout } from '../redux/auth'\nimport { withRouter } from 'react-router-dom'\nimport { push } from \"../App\";\n\n\nconst CurrentUser = ({currentUser, history, dispatch}) => {\n    return (\n        <span>\n            <li style={{marginRight: '10px'}}>\n                {currentUser.email}\n            </li>\n            <li className=\"dropdown\">\n                <DropdownButton title={<FaUser/>} id='add-version-dropdown'>\n                    <MenuItem onClick={() => push('settings')} eventKey=\"2\">\n                        Settings\n                    </MenuItem>\n                    <MenuItem\n                        onClick={() => {\n                            dispatch(logout())\n                        }}\n                        eventKey=\"3\"\n                    >\n                        Logout\n                    </MenuItem>\n                </DropdownButton>\n            </li>\n        </span>\n    )\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        currentUser: state.user.user\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(CurrentUser))\n","import React from 'react'\nimport { logout } from \"../redux/auth\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Collapse } from \"react-bootstrap\";\nimport { FaHome, FaTools, FaSignOutAlt } from \"react-icons/fa\";\nimport Search from \"./Search\";\n\nconst MobileMenu = ({toggled, dispatch}) => {\n    return (\n        <Collapse\n            in={toggled}\n            timeout={300}\n        >\n            <div className=\"navbar-default sidebar\" role=\"navigation\">\n                <div className=\"sidebar-nav navbar-collapse\">\n                    <ul className=\"nav\" id=\"side-menu\">\n                        <Search/>\n                        <li>\n                            <Link to='/'>\n                                <FaHome/> Quotes\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to='/settings'>\n                                <FaTools/> Settings\n                            </Link>\n                        </li>\n\n                        <li>\n                            <a href='' onClick={(event) => {\n                                event.preventDefault()\n                                dispatch(logout())\n                            }}>\n                                <FaSignOutAlt/> Logout\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </Collapse>\n    )\n}\n\nexport default connect()(MobileMenu)\n","import React, { useState } from 'react'\nimport Search from './Search'\nimport CurrentUser from './CurrentUser'\nimport { Link } from \"react-router-dom\";\nimport MobileMenu from \"./MobileMenu\";\n\n\nconst TopBar = () => {\n    const [mobileMenuToggled, setMobileMenuToggled] = useState(false)\n\n    return (\n        <div>\n            <div className=\"navbar-header\">\n                <button\n                    type=\"button\"\n                    className=\"navbar-toggle\"\n                    onClick={() => setMobileMenuToggled(!mobileMenuToggled)}\n                >\n                    <span className=\"sr-only\">Toggle navigation</span>\n                    <span className=\"icon-bar\"></span>\n                    <span className=\"icon-bar\"></span>\n                    <span className=\"icon-bar\"></span>\n                </button>\n                <Link className=\"navbar-brand\" to=\"/\">MyQuotes</Link>\n                <Search/>\n            </div>\n            <MobileMenu toggled={mobileMenuToggled}/>\n\n            <ul className=\"nav navbar-top-links navbar-right\" style={{padding: '9px'}}>\n                <CurrentUser/>\n            </ul>\n        </div>\n    )\n}\n\n\nexport default TopBar\n","import React from 'react'\nimport { Button, Modal as BootstrapModal } from 'react-bootstrap'\nimport { hideModal } from '../redux/ui'\nimport { connect } from 'react-redux'\nimport { removeFilter } from \"../redux/filters\";\n\nconst FilterDelete = ({type, filter, dispatch}) => {\n    return (\n        <>\n            <BootstrapModal.Body>\n                \"<b>{filter.name}</b>\" will be deleted.\n            </BootstrapModal.Body>\n            <BootstrapModal.Footer>\n                <Button bsStyle=\"danger\" onClick={() => dispatch(removeFilter(type, filter))}>\n                    Delete\n                </Button>\n                <Button onClick={() => dispatch(hideModal())}>Close</Button>\n            </BootstrapModal.Footer>\n        </>\n    )\n}\n\nexport default connect()(FilterDelete)\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport FilterDelete from \"./FilterDelete\";\nimport { showModal } from \"../redux/ui\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport { updateFilter } from \"../redux/filters\";\n\n\nconst getDeleteFilterModal = (type, filter) => {\n    return {\n        title: 'Are you sure?',\n        content: <FilterDelete type={type} filter={filter}/>\n    }\n}\n\nexport class FilterItem extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            editMode: false,\n            value: props.item.name,\n            checked: false\n        }\n    }\n\n    onEditFinished = () => {\n        this.props.dispatch(updateFilter(this.props.type, {...this.props.item, name: this.state.value}))\n        this.setState({editMode: false})\n    }\n\n    render() {\n        const {type, item, dispatch} = this.props\n\n        return (\n            <span className=\"list-group-item\">\n                <span className=\"text\" onDoubleClick={() => this.setState({editMode: true})}>\n                    {!this.state.editMode && <span>{this.state.value}</span>}\n                </span>\n                {\n                    this.state.editMode &&\n                    <input\n                        className=\"form-control sm-form-control\"\n                        value={this.state.value}\n                        onChange={(event) => this.setState({value: event.target.value})}\n                        ref={input => input && input.focus()}\n                        onBlur={this.onEditFinished}\n                        onKeyPress={(event) => {\n                            if (event.key === 'Enter') {\n                                this.onEditFinished()\n                            }\n                        }}\n                    />\n                }\n                <span\n                    className='remove-filter-button visible-on-hover'\n                    onClick={(event) => dispatch(showModal(getDeleteFilterModal(type, item)))}\n                    style={{verticalAlign: 'middle', marginLeft: '5px'}}\n                >\n                    <FaTrashAlt color='red'/>\n                </span>\n                <div className=\"material-switch pull-right\">\n                    <input\n                        id={`filter-switch-${this.props.type}-${this.props.item.id}`}\n                        type=\"checkbox\"\n                        value={this.state.checked}\n                        onClick={(event) => {\n                            const nextValue = !this.state.checked\n                            this.setState({checked: nextValue})\n                            this.props.onChange(nextValue)\n                        }}\n                    />\n\n                    <label\n                        htmlFor={`filter-switch-${this.props.type}-${this.props.item.id}`}\n                        className=\"label-success switch-label\"\n                    >\n                    </label>\n                </div>\n            </span>\n        )\n    }\n}\n\nexport default connect()(FilterItem)\n","import React, { useState } from 'react'\nimport { Button, Modal as BootstrapModal } from 'react-bootstrap'\nimport { has, join } from 'lodash'\nimport { hideModal } from '../redux/ui'\nimport { connect } from 'react-redux'\nimport { createFilter } from \"../redux/filters\";\n\n\nconst FilterForm = ({dispatch, errors, type}) => {\n    const [value, setValue] = useState('')\n\n    return (\n        <>\n            <BootstrapModal.Body>\n                <form onSubmit={(event => {\n                    event.preventDefault()\n                })}>\n                    <div>\n                        <div id=\"source\" className=\"form-group\"\n                             style={{display: 'inline-block', width: '100%', paddingRight: '10px'}}\n                        >\n                            <div className=\"form-inline\">\n                                <label htmlFor=\"id_source\">Title</label>\n                                <input\n                                    style={{width: '80%'}}\n                                    name=\"name\"\n                                    className=\"form-control\"\n                                    id=\"id_name\"\n                                    defaultValue={value}\n                                    onChange={event => setValue(event.target.value)}\n                                />\n\n                            </div>\n                            {\n                                has(errors, 'source') &&\n                                <div id=\"errors\" className=\"text-danger small\">\n                                    {join(errors.source, ' ')}\n                                </div>\n                            }\n                        </div>\n\n                    </div>\n                </form>\n            </BootstrapModal.Body>\n            <BootstrapModal.Footer>\n                <Button\n                    bsStyle=\"success\"\n                    onClick={() => dispatch(createFilter(type, {name: value}))}\n                >\n                    Save\n                </Button>\n                <Button onClick={() => dispatch(hideModal())}>Close</Button>\n            </BootstrapModal.Footer>\n\n        </>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        errors: state.quotes.errors\n    }\n}\n\nexport default connect(mapStateToProps)(FilterForm)\n","import React from \"react\";\n\nconst UPDATE_ROUTE = 'UPDATE_ROUTE'\n\n\nconst initialState = {}\n\n\nexport function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case UPDATE_ROUTE:\n            return {\n                ...state,\n                ...action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\nexport function updateRoute(route) {\n    return {\n        type: UPDATE_ROUTE,\n        payload: route\n    }\n}\n\nexport const RoutingParamsContext = React.createContext({});\n","import React from 'react'\nimport { FaPlus } from 'react-icons/fa'\nimport { Collapse } from 'react-bootstrap'\nimport { has, upperFirst, values } from 'lodash'\nimport { getAuthors } from '../redux/authors'\nimport { getCategories } from '../redux/categories'\nimport { getTags } from '../redux/tags'\nimport { connect } from 'react-redux'\nimport { changeFilter } from '../redux/filters'\nimport FilterItem from \"./FilterItem\";\nimport { showModal } from \"../redux/ui\";\nimport FilterForm from \"./FilterForm\";\nimport { RoutingParamsContext } from \"../redux/routing\";\n\n\nconst getAddFilterModal = (type) => {\n    return {\n        title: upperFirst(type),\n        content: <FilterForm type={type}/>\n    }\n}\n\nconst reducersMapping = {\n    authors: getAuthors,\n    categories: getCategories,\n    tags: getTags\n}\n\n\nclass Filter extends React.Component {\n    static contextType = RoutingParamsContext;\n\n    constructor(props, context) {\n        super(props)\n        this.state = {\n            collapsed: false,\n            username: has(context.params, 'username') ? context.params.username : null\n        }\n        this.panelBodyMaxHeight = (window.innerHeight / 3) - (25 * 3)\n    }\n\n    componentDidMount() {\n        let action = reducersMapping[this.props.type];\n        this.props.dispatch(action({user__username: this.state.username}))\n    }\n\n    render() {\n        return (\n            <div className=\"panel panel-info\">\n                <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\"\n                        onClick={() => this.setState({collapsed: !this.state.collapsed})}>\n                        {upperFirst(this.props.type)}\n                    </h3>\n                    <span\n                        style={{cursor: 'pointer'}}\n                        className='pull-right'\n                        onClick={(event) => this.props.dispatch(showModal(getAddFilterModal(this.props.type)))}\n                    >\n                        <FaPlus/>\n                    </span>\n                </div>\n                <Collapse\n                    in={this.state.collapsed}\n                    timeout={0}\n                    className=\"body-wrapper collapse\"\n                    id=\"categories-filter-body\"\n                >\n                    <div className=\"panel-body\" style={{maxHeight: this.panelBodyMaxHeight}}>\n                        {\n                            this.props[this.props.type].map((item) => (\n                                    <FilterItem\n                                        key={item.id} item={item}\n                                        type={this.props.type}\n                                        onChange={(checked) => {\n                                            this.props.dispatch(changeFilter(this.props.type, item.id, checked))\n                                        }}\n                                    />\n                                )\n                            )\n                        }\n                        {\n                            !this.props[this.props.type].length &&\n                            <span>There are no {this.props.type}...</span>\n                        }\n                    </div>\n                </Collapse>\n            </div>\n        )\n    }\n}\n\n\nFilter.defaultProps = {\n    authors: [],\n    categories: [],\n    tags: []\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authors: values(state.authors.data),\n        categories: values(state.categories.data),\n        tags: values(state.tags.data)\n    }\n}\n\n\nexport default connect(mapStateToProps)(Filter)\n","import React from 'react'\nimport Filter from './Filter'\n\nconst Sidebar = () => (\n    <div>\n        <Filter type='categories'/>\n        <Filter type='authors'/>\n        <Filter type='tags'/>\n    </div>\n)\n\nexport default Sidebar\n","import React, { useState } from 'react'\nimport { Button, Modal as BootstrapModal } from 'react-bootstrap'\nimport { map, values, omit, has, join } from 'lodash'\nimport { createQuote, updateQuote } from '../redux/quotes'\nimport { hideModal } from '../redux/ui'\nimport { connect } from 'react-redux'\nimport CreatableSelect from 'react-select/creatable'\nimport AsyncCreatableSelect from 'react-select/async-creatable'\nimport CKEditor from 'ckeditor4-react'\nimport { client } from '../redux/api'\n\n\nexport let QuoteForm = ({ dispatch, quote, authors, categories, tags, errors }) => {\n    let defaultValues = {}\n\n    if (quote) {\n        defaultValues = omit(quote, ['author', 'category', 'tags', 'created', 'id', 'modified', 'user_id'])\n    }\n\n    const [inputs, setInputs] = useState(defaultValues)\n    const action = quote ? updateQuote({ id: quote.id, ...inputs }) : createQuote(inputs)\n\n    const promiseOptions = inputValue =>\n        new Promise(resolve => {\n            client.get('/authors/', { params: { name: inputValue } }).then(\n                (result) => resolve(map(result.data, (item) => ({ value: item.name, label: item.name })))\n            )\n        })\n\n    return (\n        <>\n            <BootstrapModal.Body>\n                <form onSubmit={ (event => {\n                    event.preventDefault()\n\n                }) }>\n                    <div id=\"title\" className=\"form-group\">\n                        <div className=\"form-inline\">\n                            <label htmlFor=\"id_title\">Title</label>\n                            <input name=\"title\"\n                                   style={ { width: '50%' } }\n                                   maxLength=\"400\"\n                                   className=\"form-control\"\n                                   id=\"id_title\"\n                                   defaultValue={ inputs.title }\n                                   onChange={ event => setInputs({\n                                       ...inputs,\n                                       [event.target.name]: event.target.value\n                                   }) }\n                            />\n                            <div className=\"material-switch pull-right\">\n                                <input\n                                    id=\"id_private\"\n                                    type=\"checkbox\"\n                                    checked={ inputs.private || false }\n                                    onChange={ (event) => setInputs({\n                                        ...inputs,\n                                        private: event.target.checked\n                                    }) }\n                                />\n                                <label htmlFor=\"id_private\" className=\"label-success switch-label\"></label>\n                                <label htmlFor=\"id_private\" style={ { marginLeft: '5px' } }>Private</label>\n                            </div>\n\n                        </div>\n                        {\n                            has(errors, 'title') &&\n                            <div id=\"errors\" className=\"text-danger small\">\n                                {join(errors.title, ' ')}\n                            </div>\n                        }\n                    </div>\n\n                    <div>\n                        <div id=\"author\" className=\"form-group\"\n                             style={ { display: 'inline-block', width: '50%', paddingRight: '10px' } }\n                        >\n                            <div className=\"form-inline\">\n                                <label htmlFor=\"id_author\">Author</label>\n                                <AsyncCreatableSelect\n                                    cacheOptions\n                                    isClearable\n                                    className={ 'author-select' }\n                                    value={ { value: inputs.author_name, label: inputs.author_name } }\n                                    defaultOptions={ authors.map((item) => ({ value: item.name, label: item.name })) }\n                                    loadOptions={ promiseOptions }\n                                    onChange={ event => setInputs({\n                                        ...inputs,\n                                        author_name: event ? event.value : null\n                                    }) }\n                                />\n\n                            </div>\n                            {\n                                has(errors, 'author') &&\n                                <div id=\"errors\" className=\"text-danger small\">\n                                    { join(errors.author, ' ') }\n                                </div>\n                            }\n                        </div>\n                        <div id=\"category\" className=\"form-group\"\n                             style={ { display: 'inline-block', width: '50%', paddingLeft: '10px' } }\n                        >\n                            <div className=\"form-inline\">\n                                <label htmlFor=\"id_category\">Category</label>\n                                <CreatableSelect\n                                    isClearable\n                                    className={ 'category-select' }\n                                    value={ { value: inputs.category_name, label: inputs.category_name } }\n                                    options={ categories.map((item) => ({ value: item.name, label: item.name })) }\n                                    onChange={ event => setInputs({\n                                        ...inputs,\n                                        category_name: event ? event.value : null\n                                    }) }\n                                />\n\n                            </div>\n                            {\n                                has(errors, 'category') &&\n                                <div id=\"errors\" className=\"text-danger small\">\n                                    { join(errors.category, ' ') }\n                                </div>\n                            }\n                        </div>\n                    </div>\n                    <div>\n                        <div id=\"source\" className=\"form-group\"\n                             style={ { display: 'inline-block', width: '50%', paddingRight: '10px' } }\n                        >\n                            <div className=\"form-inline\">\n                                <label htmlFor=\"id_source\">Source</label>\n                                <input name=\"source\"\n                                       maxLength=\"400\"\n                                       className=\"form-control\"\n                                       id=\"id_source\"\n                                       defaultValue={ inputs.source }\n                                       onChange={ event => setInputs({\n                                           ...inputs,\n                                           [event.target.name]: event.target.value\n                                       }) }\n                                />\n\n                            </div>\n                            {\n                                has(errors, 'source') &&\n                                <div id=\"errors\" className=\"text-danger small\">\n                                    { join(errors.source, ' ') }\n                                </div>\n                            }\n                        </div>\n                        <div id=\"reference\" className=\"form-group\"\n                             style={ { display: 'inline-block', width: '50%', paddingLeft: '10px' } }\n                        >\n                            <div className=\"form-inline\">\n                                <label htmlFor=\"id_reference\">Reference</label>\n                                <input name=\"reference\"\n                                       maxLength=\"400\"\n                                       className=\"form-control\"\n                                       id=\"id_reference\"\n                                       defaultValue={ inputs.reference }\n                                       onChange={ event => setInputs({\n                                           ...inputs,\n                                           [event.target.name]: event.target.value\n                                       }) }\n                                />\n\n                            </div>\n                            {\n                                has(errors, 'reference') &&\n                                <div id=\"errors\" className=\"text-danger small\">\n                                    { join(errors.reference, ' ') }\n                                </div>\n                            }\n                        </div>\n                    </div>\n                    <div>\n                        <div id=\"tags\" className=\"form-group\"\n                             style={ { display: 'inline-block', width: '100%' } }\n                        >\n                            <div className=\"form-inline\">\n                                <label htmlFor=\"id_tags\">Tags</label>\n                                <CreatableSelect\n                                    isMulti\n                                    value={ map(inputs.tags_name, (item) => ({ value: item, label: item })) }\n                                    options={ tags.map((item) => ({ value: item.name, label: item.name })) }\n                                    className={ 'tags-select' }\n                                    onChange={ event => setInputs({\n                                        ...inputs,\n                                        tags_name: map(event, (item) => item.value)\n                                    }) }\n                                />\n\n                            </div>\n                            {\n                                has(errors, 'tags') &&\n                                <div id=\"errors\" className=\"text-danger small\">\n                                    { join(errors.tags, ' ') }\n                                </div>\n                            }\n                        </div>\n                    </div>\n                    <div>\n                        <CKEditor\n                            data={ inputs.text }\n                            config={ {\n                                toolbar: [['Bold', 'Italic', 'Link', 'Strike', '-', 'NumberedList', 'BulletedList']],\n                                height : 100\n                            } }\n                            onChange={ event => setInputs({\n                                ...inputs,\n                                text: event.editor.getData()\n                            }) }\n                        />\n                        {\n                            has(errors, 'text') &&\n                            <div id=\"errors\" className=\"text-danger small\">\n                                {join(errors.text, ' ')}\n                            </div>\n                        }\n                    </div>\n                </form>\n            </BootstrapModal.Body>\n            <BootstrapModal.Footer>\n                <Button\n                    bsStyle=\"success\"\n                    onClick={ () => dispatch(action) }\n                >\n                    Save\n                </Button>\n                <Button onClick={ () => dispatch(hideModal()) }>Close</Button>\n            </BootstrapModal.Footer>\n\n        </>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        authors   : values(state.authors.data),\n        categories: values(state.categories.data),\n        tags      : values(state.tags.data),\n        errors    : state.quotes.errors\n    }\n}\n\nexport default connect(mapStateToProps)(QuoteForm)","import React from 'react'\nimport { Button, Modal as BootstrapModal } from 'react-bootstrap'\nimport { hideModal } from '../redux/ui'\nimport { removeQuote } from '../redux/quotes'\nimport { connect } from 'react-redux'\n\nconst QuoteDelete = ({quote, dispatch}) => {\n    return (\n        <>\n            <BootstrapModal.Body>\n                The quote \"<b>{quote.title}</b>\" will be deleted.\n            </BootstrapModal.Body>\n            <BootstrapModal.Footer>\n                <Button\n                    bsStyle=\"danger\"\n                    onClick={() => dispatch(removeQuote(quote))}\n                >\n                    Delete\n                </Button>\n                <Button onClick={() => dispatch(hideModal())}>Close</Button>\n            </BootstrapModal.Footer>\n        </>\n    )\n}\n\nexport default connect()(QuoteDelete)\n","import React from 'react'\n\nimport { FaPencilAlt, FaTrashAlt } from 'react-icons/fa'\nimport { connect } from 'react-redux'\nimport { showModal } from '../redux/ui'\nimport QuoteForm from './QuoteForm'\nimport QuoteDelete from './QuoteDelete'\n\nconst html = (text) => ({__html: text})\n\n\nconst getEditQuoteModal = (quote) => {\n    return {\n        title: 'Edit Quote',\n        content: <QuoteForm quote={quote}/>\n    }\n}\n\nconst getDeleteQuiteModal = (quote) => {\n    return {\n        title: 'Are you sure?',\n        content: <QuoteDelete quote={quote}/>\n    }\n}\n\nconst Quote = ({quote, user, dispatch}) => (\n    <div className=\"list-group\">\n        <div className=\"list-group-item\">\n            {(quote.user_id === user.id) &&\n            <span className=\"quote-actions\">\n                <a\n                    href=\"\"\n                    id=\"edit-button\"\n                    className=\"visible-on-hover\"\n                    onClick={(event) => {\n                        event.preventDefault()\n                        dispatch(showModal(getEditQuoteModal(quote)))\n                    }}\n\n                >\n                    <FaPencilAlt/>\n                </a>\n                <a href=\"\" id=\"delete-button\" className=\"visible-on-hover\"\n                   onClick={(event) => {\n                       event.preventDefault()\n                       dispatch(showModal(getDeleteQuiteModal(quote)))\n                   }}\n                >\n                    <FaTrashAlt/>\n                </a>\n            </span>\n            }\n            <h4 className=\"list-group-item-heading\">{quote.title}</h4>\n            <p className=\"list-group-item-text\" dangerouslySetInnerHTML={html(quote.text)}></p>\n            <div className=\"author label label-danger\">{quote.author_name}</div>\n        </div>\n    </div>\n)\n\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user.user\n    }\n}\n\nexport default connect(mapStateToProps)(Quote)\n","import React from 'react'\n\nconst Spinner = ({show}) => {\n    if (!show) {\n        return null\n    }\n\n    return (\n        <div className=\"spinner\">\n            <svg width=\"60px\" height=\"60px\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle fill=\"none\" strokeWidth=\"5\" strokeLinecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\" className=\"circle\"/>\n            </svg>\n        </div>\n    )\n}\n\nexport default Spinner\n","import React from 'react'\nimport { connect } from \"react-redux\";\nimport Spinner from \"./Spinner\";\n\nconst QuotesOverlay = ({isLoading}) => {\n    if (!isLoading) {\n        return null\n    }\n\n    return (\n        <div\n            className=\"overlay\"\n            style={{\n                width: '100%',\n                height: '100%',\n                position: 'absolute',\n                zIndex: '10',\n                backgroundColor: 'white',\n                opacity: '0.6',\n            }}\n        >\n            <Spinner show={isLoading}/>\n        </div>\n    )\n}\n\nexport default connect()(QuotesOverlay)","import React from 'react'\nimport { Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { reload } from \"../redux/api\";\n\nconst Offline = ({dispatch}) => {\n    return (\n        <Alert bsStyle=\"danger\">\n            You're offline. Please <strong>\n            <a\n                href='/'\n                onClick={(event) => {\n                    event.preventDefault()\n                    dispatch(reload())\n                }}\n            >\n                try again\n            </a>\n\n        </strong>.\n        </Alert>\n    )\n}\n\n\nexport default connect()(Offline)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { has, orderBy, toArray } from 'lodash'\nimport Quote from './Quote'\nimport { getQuotes } from '../redux/quotes'\nimport { withRouter } from 'react-router-dom'\nimport QuotesOverlay from \"./QuotesOverlay\";\nimport { RoutingParamsContext } from \"../redux/routing\";\nimport Offline from \"./Offline\";\n\nclass QuotesList extends React.Component {\n    static contextType = RoutingParamsContext;\n\n    constructor(props, context) {\n        super(props)\n\n        this.state = {\n            username: has(context.params, 'username') ? context.params.username : null\n        }\n    }\n\n    loadData() {\n        const {dispatch, filters, page, hasMore} = this.props\n\n        if (hasMore) {\n            this.setState({isLoading: true})\n            const params = {\n                user__username: this.state.username,\n                author: toArray(filters.authors),\n                category: toArray(filters.categories),\n                tags: toArray(filters.tags),\n                page: page ? page + 1 : page\n            }\n\n            dispatch(getQuotes(params))\n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch(getQuotes({user__username: this.state.username}))\n    }\n\n    render() {\n        return (\n            <div id=\"quotes-wrapper\">\n                <QuotesOverlay isLoading={this.props.isLoading}/>\n                <div>\n                    {\n                        this.props.quotes.map((item => (\n                            <Quote quote={item} key={item.id}/>\n                        )))\n                    }\n                    {\n                        this.props.quotes.length === 0 && this.props.isOnline && <span>There are no quotes!</span>\n                    }\n                    {\n                        !this.props.isOnline && <Offline/>\n                    }\n                </div>\n                <div className=\"pagination-wrapper\" style={{textAlign: 'center', marginBottom: '30px', float: 'none'}}>\n                    {\n                        this.props.hasMore &&\n                        <button\n                            style={{minWidth: '150px', maxWidth: '200px'}}\n                            className=\"btn btn-primary\"\n                            onClick={(event) => this.loadData()}\n                        >\n                            Load More\n                        </button>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const quotes = orderBy(state.quotes.data, 'id', 'desc')\n    const filters = state.filters\n\n    const page = state.quotes.page\n    const hasMore = state.quotes.hasMore\n\n    const isLoading = state.api.isLoading\n    const isOnline = state.api.isOnline\n\n    return {\n        isLoading,\n        isOnline,\n        quotes,\n        filters,\n        page,\n        hasMore\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(QuotesList))\n","import TopBar from '../components/TopBar'\nimport { FaPlus } from 'react-icons/fa'\nimport QuotesSidebar from '../components/QuotesSidebar'\nimport QuotesList from '../components/QuotesList'\nimport React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { showModal } from '../redux/ui'\nimport QuoteForm from '../components/QuoteForm'\nimport { store } from '..'\nimport { RoutingParamsContext } from \"../redux/routing\"\n\nconst getNewQuoteModal = (quote) => {\n    return {\n        title: 'New Quote',\n        content: <QuoteForm/>\n    }\n}\n\nconst Quotes = ({match}) => (\n    <div className=\"App\">\n        <nav className=\"navbar navbar-default navbar-static-top\" role=\"navigation\" style={{marginBottom: 0}}>\n            <TopBar/>\n        </nav>\n\n        <div id=\"page-wrapper\">\n            <div className=\"row page-header-row\">\n                <div className=\"col-lg-12\">\n                    <h3 className=\"page-header\">My Quotes</h3>\n                </div>\n            </div>\n            <div className=\"row\">\n                <RoutingParamsContext.Provider value={match}>\n                    <div id=\"quotes-list\" className=\"row\">\n                        <span\n                            className=\"add-quote-icon\"\n                            onClick={(event) => store.dispatch(showModal(getNewQuoteModal()))}\n                        >\n                            <FaPlus color='#337ab7' size='2em'/>\n                        </span>\n                        <div id=\"filters\" className=\"col-xs-12 col-md-3\">\n                            <QuotesSidebar/>\n                        </div>\n\n                        <div id=\"filtered-content\" className=\"col-xs-12 col-sm-12 col-md-8\">\n                            <QuotesList/>\n                        </div>\n                    </div>\n                </RoutingParamsContext.Provider>\n            </div>\n        </div>\n    </div>\n)\n\nexport default withRouter(Quotes)\n","import React, { useState } from 'react'\n\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { login } from '../redux/auth'\nimport { has, join } from \"lodash\";\n\n\nconst defaultValues = {\n    email: '',\n    password: ''\n}\n\nconst Login = ({errors, history, dispatch}) => {\n    const [inputs, setInputs] = useState(defaultValues)\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-4 col-md-offset-4\">\n                    <div className=\"login-panel panel panel-default\">\n                        <div className=\"panel-heading\">\n                            <h3 className=\"panel-title\">Login</h3>\n                        </div>\n                        <div className=\"panel-body\">\n                            <p>If you don't have an account, please <Link to=\"/signup\">sign up</Link>.</p>\n                            {\n                                has(errors, 'non_field_errors') && errors.non_field_errors.map((error, idx) => {\n                                    return (\n                                        <div key={idx} className=\"text-danger small\">\n                                            {error}\n                                        </div>\n                                    )\n                                })\n                            }\n                            <form className=\"login\">\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"email\"\n                                        name=\"login\"\n                                        placeholder=\"E-mail\"\n                                        autoFocus=\"autofocus\"\n                                        className=\"form-control\"\n                                        required=\"\"\n                                        id=\"id_login\"\n                                        onChange={(event) => setInputs({...inputs, email: event.target.value})}\n                                    />\n                                    {\n                                        has(errors, 'email') &&\n                                        <div id=\"errors\" className=\"text-danger small\">\n                                            {join(errors.email, ' ')}\n                                        </div>\n                                    }\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        name=\"password\"\n                                        placeholder=\"Password\"\n                                        className=\"form-control\"\n                                        required=\"\"\n                                        id=\"id_password\"\n                                        onChange={(event) => setInputs({...inputs, password: event.target.value})}\n                                    />\n                                </div>\n                                <button\n                                    className=\"btn btn-lg btn-success btn-block\"\n                                    onClick={(e) => {\n                                        e.preventDefault()\n                                        dispatch(login(inputs))\n                                    }}\n                                >\n                                    Sign In\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        errors: state.auth.errors\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(Login))\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { has, join } from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { signup } from \"../redux/auth\";\n\nconst defaultValues = {\n    email: '',\n    password1: '',\n    password2: '',\n}\n\nconst Signup = ({errors, dispatch}) => {\n\n    const [inputs, setInputs] = useState(defaultValues)\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-4 col-md-offset-4\">\n                    <div className=\"login-panel panel panel-default\">\n                        <div className=\"panel-heading\">\n                            <h3 className=\"panel-title\">Sign Up</h3>\n                        </div>\n                        <div className=\"panel-body\">\n                            <p>Already have an account? Please <Link to=\"/login\">log in</Link>.</p>\n                            {\n                                has(errors, 'non_field_errors') && errors.non_field_errors.map((error, idx) => {\n                                    return (\n                                        <div key={idx} className=\"text-danger small\">\n                                            {error}\n                                        </div>\n                                    )\n                                })\n                            }\n\n                            <form className=\"signup\" method=\"POST\" action=\"/signup\">\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"email\"\n                                        name=\"email\"\n                                        placeholder=\"E-mail\"\n                                        className=\"form-control\"\n                                        required=\"\" id=\"id_email\"\n                                        onChange={(event) => setInputs({...inputs, email: event.target.value})}\n                                    />\n                                    {\n                                        has(errors, 'email') &&\n                                        <div id=\"errors\" className=\"text-danger small\">\n                                            {join(errors.email, ' ')}\n                                        </div>\n                                    }\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        name=\"password1\"\n                                        placeholder=\"Password\"\n                                        className=\"form-control\"\n                                        required=\"\"\n                                        id=\"id_password1\"\n                                        onChange={(event) => setInputs({...inputs, password1: event.target.value})}\n                                    />\n                                    {\n                                        has(errors, 'password1') &&\n                                        <div id=\"errors\" className=\"text-danger small\">\n                                            {join(errors.password1, ' ')}\n                                        </div>\n                                    }\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        name=\"password2\"\n                                        placeholder=\"Password (again)\"\n                                        className=\"form-control\"\n                                        required=\"\"\n                                        id=\"id_password2\"\n                                        onChange={(event) => setInputs({...inputs, password2: event.target.value})}\n                                    />\n                                    {\n                                        has(errors, 'password2') &&\n                                        <div id=\"errors\" className=\"text-danger small\">\n                                            {join(errors.password2, ' ')}\n                                        </div>\n                                    }\n                                </div>\n\n                                <button\n                                    className=\"btn btn-lg btn-success btn-block\"\n                                    type=\"submit\"\n                                    onClick={(e) => {\n                                        e.preventDefault()\n                                        dispatch(signup(inputs))\n                                    }}\n                                >\n                                    Sign Up\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        errors: state.auth.errors\n    }\n}\n\nexport default connect(mapStateToProps)(Signup)\n","import React from 'react'\n\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst InactiveAccount = ({history, dispatch}) => {\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-4 col-md-offset-4\">\n                    <div className=\"login-panel panel panel-default\">\n                        <div className=\"panel-heading\">\n                            <h3 className=\"panel-title\">Account waiting for approval</h3>\n                        </div>\n                        <div className=\"panel-body\">\n                            Please try to <Link to='/login'>login</Link> after receiving approval.\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default connect()(withRouter(InactiveAccount))\n","const UPDATE_USER = 'UPDATE_USER'\nconst UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\n\n\nconst initialState = {\n    token: null,\n    user: {\n        id: null,\n        email: null\n    },\n    errors: {}\n}\n\n\nexport function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case UPDATE_USER_SUCCESS:\n            console.log(action)\n\n            return {\n                ...state,\n                user: action.payload.data,\n            }\n\n        case 'LOGIN_SUCCESS':\n            return {\n                ...state,\n                token: action.payload.data.token,\n                user: action.payload.data.user,\n                errors: {}\n            }\n        case 'LOGIN_FAIL':\n        case 'SIGNUP_FAIL':\n            return {\n                ...state,\n                errors: action.payload\n            }\n        case 'LOGOUT':\n            return initialState\n\n        default:\n            return state\n    }\n}\n\nexport const updateUser = (user) => {\n    const url = '/users/me/'\n\n    return {\n        type: UPDATE_USER,\n        payload: {\n            request: {\n                url: url,\n                method: 'PATCH',\n                data: user\n            }\n        }\n    }\n}\n","import TopBar from '../components/TopBar'\nimport React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { updateUser } from \"../redux/user\";\n\n\nconst Settings = ({match, errors, dispatch, user}) => {\n    const [inputs, setInputs] = useState(user)\n\n    return (\n        <div className=\"App\">\n            <nav className=\"navbar navbar-default navbar-static-top\" role=\"navigation\" style={{marginBottom: 0}}>\n                <TopBar/>\n            </nav>\n            <div id=\"page-wrapper\" style={{minHeight: '353px'}}>\n                <div className=\"row page-header-row\">\n                    <div className=\"col-lg-12\">\n                        <h3 className=\"page-header\">Settings</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n\n                    <div id=\"user-edit\" style={{marginTop: '110px'}}>\n                        <div className=\"col-xs-12 col-sm-12 col-md-8\">\n                            <form method=\"post\" action=\"/settings/\" id=\"quote-form\" className=\"ng-pristine ng-valid\">\n                                <div className=\"form-group\">\n                                    <div\n                                        className=\"form-inline\">\n                                        <label htmlFor=\"id_username\">Username (URL):</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"username\"\n                                            maxLength=\"150\"\n                                            className=\"form-control\" required=\"\"\n                                            id=\"id_username\"\n                                            defaultValue={inputs.username}\n                                            onChange={event => setInputs({\n                                                ...inputs,\n                                                [event.target.name]: event.target.value\n                                            })}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <div className=\"form-inline\">\n                                        <label htmlFor=\"id_email\">Email address:</label>\n                                        <input type=\"email\"\n                                               name=\"email\"\n                                               maxLength=\"254\"\n                                               className=\"form-control\"\n                                               id=\"id_email\"\n                                               defaultValue={inputs.email}\n                                               onChange={event => setInputs({\n                                                   ...inputs,\n                                                   [event.target.name]: event.target.value\n                                               })}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <div className=\"form-inline\">\n                                        <label htmlFor=\"id_first_name\">First name:</label>\n                                        <input type=\"text\"\n                                               name=\"first_name\"\n                                               maxLength=\"30\"\n                                               className=\"form-control\"\n                                               id=\"id_first_name\"\n                                               defaultValue={inputs.first_name}\n                                               onChange={event => setInputs({\n                                                   ...inputs,\n                                                   [event.target.name]: event.target.value\n                                               })}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <div className=\"form-inline\">\n                                        <label htmlFor=\"id_last_name\">Last name:</label>\n                                        <input name=\"last_name\"\n                                               maxLength=\"150\"\n                                               className=\"form-control\"\n                                               id=\"id_last_name\"\n                                               defaultValue={inputs.last_name}\n                                               onChange={event => setInputs({\n                                                   ...inputs,\n                                                   [event.target.name]: event.target.value\n                                               })}\n\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <span\n                                        className=\"btn btn-success\"\n                                        onClick={() => dispatch(updateUser(inputs))}\n                                    >\n                                        Save\n                                    </span>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    console.log(state.user)\n    return {\n        user: state.user.user\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(Settings))\n","import Quotes from \"./screens/Quotes\";\nimport Login from \"./screens/Login\";\nimport Signup from \"./screens/Signup\";\nimport InactiveAccount from \"./screens/InactiveAccount\";\nimport Settings from \"./screens/Settings\";\n\nclass Route {\n    constructor(path, component, isPublic = false) {\n        this.path = path\n        this.component = component\n        this.isPublic = isPublic\n    }\n}\n\n\nexport const ROUTES = [\n    new Route('/', Quotes, false),\n    // new Route('/quotes', Quotes, false),\n    new Route('/login', Login, true),\n    new Route('/signup', Signup, true),\n    new Route('/inactive', InactiveAccount, true),\n    new Route('/settings', Settings, false),\n    new Route('/:username', Quotes, false),\n]\n","import { Redirect, withRouter } from \"react-router\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { isNull } from \"lodash\";\nimport { updateRoute } from \"../redux/routing\";\n\nconst RouterManager = ({route, isAuthenticated, match, dispatch, location}) => {\n    useEffect(() => {\n        dispatch(updateRoute({match, location}))\n    });\n\n    if (!route.isPublic && !isAuthenticated) {\n        return <Redirect to='/login'/>\n    }\n\n    return React.createElement(route.component)\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticated: !isNull(state.user.token)\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(RouterManager))\n","import React from \"react\";\nimport { Route, Router as ReactRouter, Switch } from \"react-router\";\nimport { history } from \"../App\";\nimport { map } from 'lodash'\nimport { ROUTES } from \"../routing\";\nimport RouterManager from \"./RouterManager\";\n\n\nclass Router extends React.Component {\n    render() {\n        return (\n            <ReactRouter history={history}>\n                <Switch>\n                    {\n                        map(ROUTES, (route, idx) => {\n                            return (\n                                <Route\n                                    exact\n                                    key={idx}\n                                    path={route.path}\n                                    render={(props) => {\n                                        return (\n                                            <RouterManager route={route}/>\n                                        )\n                                    }}\n                                />\n                            )\n                        })\n                    }\n                </Switch>\n            </ReactRouter>\n        )\n    }\n}\n\n\nexport default Router\n","import { select, takeEvery } from 'redux-saga/effects'\n\n\nexport const INITIALIZE = 'INITIALIZE'\nexport const INITIALIZED = 'INITIALIZED'\n\nconst initialState = {}\n\n\nexport function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case INITIALIZE:\n            return state\n        case INITIALIZED:\n            return state\n        default:\n            return state\n    }\n}\n\nexport function* handleAppInitialization() {\n    console.log('Do app init stuff...')\n\n    const existingToken = yield select((state) => state.user.token)\n    if (existingToken) {\n        console.log('Call token refresh...')\n    }\n}\n\nexport function* saga() {\n    yield takeEvery(INITIALIZE, handleAppInitialization)\n}\n\n\nexport const initialize = () => ({type: INITIALIZE})\n","import React from 'react'\nimport { createBrowserHistory, createMemoryHistory } from 'history'\n\nimport { connect } from 'react-redux'\nimport Modal from './components/Modal'\nimport './App.css'\nimport Router from \"./components/Router\";\nimport { initialize } from \"./redux/app\";\n\n\nexport const history = process.env.NODE_ENV === 'test' ? createMemoryHistory() : createBrowserHistory()\nexport const {push, replace} = history\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.dispatch(initialize())\n    }\n\n    render() {\n        const {modal} = this.props\n\n        return (\n            <div>\n                <Router/>\n                {modal && <Modal {...modal} />}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        modal: state.ui.modal\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","import { takeEvery, call } from 'redux-saga/effects'\nimport { setHeaders } from './api'\nimport { push } from \"../App\";\n\n\nconst initialState = {\n    errors: {}\n}\n\n\nexport function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case 'LOGIN_SUCCESS':\n            return {\n                ...state,\n                errors: {}\n            }\n        case 'LOGIN_FAIL':\n        case 'SIGNUP_FAIL':\n            return {\n                ...state,\n                errors: action.payload\n            }\n        case 'LOGOUT':\n            return initialState\n\n        default:\n            return state\n    }\n}\n\nfunction* handleLoginSuccess(payload) {\n    yield call(setHeaders, {Authorization: payload.payload.data.token})\n    yield call(push, '/')\n}\n\n\nexport function* handleUserUnauthenticated() {\n    yield call(push, 'login')\n}\n\nfunction* redirectToLogin() {\n    yield call(push, 'login')\n}\n\nfunction* handleLogout() {\n    yield redirectToLogin()\n}\n\nfunction* handleSignupSuccess() {\n    yield call(push, 'inactive')\n}\n\nexport function* saga() {\n    yield takeEvery('LOGIN_SUCCESS', handleLoginSuccess)\n    yield takeEvery('SIGNUP_SUCCESS', handleSignupSuccess)\n    yield takeEvery('LOGOUT', handleLogout)\n    // yield takeEvery(REHYDRATE, handleExistingToken)\n}\n\n\nexport const login = (data) => {\n    const url = '/auth/login/'\n\n    return (\n        {\n            type: 'LOGIN',\n            payload: {\n                request: {\n                    url: url,\n                    method: 'POST',\n                    data: data\n                }\n            }\n        }\n    )\n}\n\nexport const signup = (data) => {\n    const url = '/auth/signup/'\n\n    return (\n        {\n            type: 'SIGNUP',\n            payload: {\n                request: {\n                    url: url,\n                    method: 'POST',\n                    data: data\n                }\n            }\n        }\n    )\n}\n\n\nexport const logout = () => {\n    return (\n        {\n            type: 'LOGOUT'\n        }\n    )\n}\n","import { has } from 'lodash'\nimport { call, takeEvery, put, select } from 'redux-saga/effects'\nimport { forEach } from 'lodash'\nimport axios from 'axios'\nimport * as qs from 'qs'\nimport { handleUserUnauthenticated } from \"./auth\";\nimport { store } from \"../index\";\nimport { handleFilterChange } from \"./filters\";\nimport { getAuthors } from \"./authors\";\nimport { getCategories } from \"./categories\";\nimport { getTags } from \"./tags\";\n\nconst initialState = {\n    pendingRequests: 0,\n    isLoading: false,\n    isOnline: true\n}\n\nconst REQUEST_STARTED = 'REQUEST_STARTED'\nconst REQUEST_FINISHED = 'REQUEST_FINISHED'\nconst API_IS_OFFLINE = 'API_IS_OFFLINE'\nconst RELOAD = 'RELOAD'\n\nexport function reducer(state = initialState, action = {}) {\n    let currentPendingRequests\n\n    switch (action.type) {\n        case REQUEST_STARTED:\n            currentPendingRequests = state.pendingRequests + 1\n            return {\n                ...state,\n                pendingRequests: currentPendingRequests,\n                isLoading: currentPendingRequests > 0\n            }\n\n        case REQUEST_FINISHED:\n            currentPendingRequests = state.pendingRequests - 1\n            return {\n                ...state,\n                pendingRequests: currentPendingRequests,\n                isLoading: currentPendingRequests > 0,\n                isOnline: true\n            }\n        case API_IS_OFFLINE:\n            return {\n                ...state,\n                isOnline: false\n            }\n\n        default:\n            return state\n    }\n}\n\n// Deprecated reducer...\nexport function oldReducer(state = initialState, action = {}) {\n    if (has(action.payload, 'request')) {\n        if (has(action.payload, 'status')) {\n            return {\n                isLoading: false\n            }\n        }\n        else {\n            return {\n                isLoading: true\n            }\n        }\n    }\n\n    if (has(action, 'error')) {\n        return {\n            isLoading: false\n        }\n    }\n\n    return state\n}\n\nexport const SUCCESS_SUFFIX = '_SUCCESS'\nexport const ERROR_SUFFIX = '_FAIL'\n\nexport const client = axios.create({\n    baseURL: process.env.REACT_APP_API_URL,\n    responseType: 'json',\n    paramsSerializer: function (params) {\n        return qs.stringify(params, {arrayFormat: 'repeat', skipNulls: true})\n    },\n})\n\nclient.interceptors.request.use((config) => {\n    store.dispatch({type: REQUEST_STARTED})\n    return config;\n}, (error) => {\n    return Promise.reject(error);\n});\n\nclient.interceptors.response.use((response) => {\n    store.dispatch({type: REQUEST_FINISHED})\n    return response;\n}, (error) => {\n    store.dispatch({type: REQUEST_FINISHED})\n    return Promise.reject(error);\n});\n\nexport function setHeaders(headers) {\n    forEach(headers, (value, name) => {\n        axios.defaults.headers.common[name] = value\n    })\n}\n\nfunction* handleReload() {\n    const routing = yield select((state) => state.routing)\n\n    const params = {\n        user__username: has(routing.match.params, 'username') ? routing.match.params.username : null\n    }\n\n    yield handleFilterChange()\n\n    yield put(getAuthors(params))\n    yield put(getCategories(params))\n    yield put(getTags(params))\n}\n\nfunction* handleRequest(action) {\n    const {type, payload: {request}} = action\n    const url = request.url\n    const method = request.method ? request.method : 'GET'\n    const data = request.data ? request.data : null\n    const params = request.params ? request.params : {}\n    let headers = {}\n\n    const userToken = yield select((state => state.user.token))\n    if (userToken) {\n        headers['Authorization'] = `JWT ${userToken}`\n        // headers['Authorization'] = `JWT abc`\n    }\n\n    try {\n        const response = yield call(client, url, {params, method, data, headers})\n        yield put({type: type + SUCCESS_SUFFIX, payload: response})\n    }\n    catch (errorResponse) {\n        if (!errorResponse.response) {\n            console.log('It should be a network error.')\n            yield put({type: API_IS_OFFLINE})\n        }\n        else {\n            yield put({type: type + ERROR_SUFFIX, payload: errorResponse.response.data})\n\n            if (errorResponse.response.status === 401) {\n                yield handleUserUnauthenticated()\n            }\n        }\n    }\n}\n\n\nconst API_ACTIONS = [\n    'GET_QUOTES',\n    'GET_QUOTE',\n    'CREATE_QUOTE',\n    'UPDATE_QUOTE',\n    'DELETE_QUOTE',\n    'GET_AUTHORS',\n    'GET_AUTHOR',\n    'CREATE_AUTHOR',\n    'UPDATE_AUTHOR',\n    'DELETE_AUTHOR',\n    'GET_CATEGORIES',\n    'GET_CATEGORY',\n    'CREATE_CATEGORY',\n    'UPDATE_CATEGORY',\n    'DELETE_CATEGORY',\n    'GET_TAGS',\n    'GET_TAG',\n    'CREATE_TAG',\n    'UPDATE_TAG',\n    'DELETE_TAG',\n    'UPDATE_USER',\n    'LOGIN',\n    'SIGNUP'\n]\n\nexport function* saga() {\n    yield takeEvery(API_ACTIONS, handleRequest)\n    yield takeEvery(RELOAD, handleReload)\n}\n\n\nexport const reload = () => ({\n    type: RELOAD\n})\n","import { createStore as createReduxStore, applyMiddleware, combineReducers } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { all } from 'redux-saga/effects'\n\n\nimport storage from 'redux-persist/lib/storage'\nimport { persistReducer } from 'redux-persist'\n\nimport { reducer as apiReducer } from './api'\nimport { reducer as userReducer } from './user'\nimport { reducer as authReducer } from './auth'\nimport { reducer as routingReducer } from './routing'\n\nimport { reducer as quotesReducer } from './quotes'\nimport { reducer as categoriesReducer } from './categories'\nimport { reducer as authorsReducer } from './authors'\nimport { reducer as tagsReducer } from './tags'\nimport { reducer as uiReducer } from './ui'\nimport { reducer as filtersReducer } from './filters'\nimport { reducer as appReducer } from './app'\n\nimport { saga as authSaga } from './auth'\nimport { saga as quotesSaga } from './quotes'\nimport { saga as apiSaga } from './api'\nimport { saga as filtersSaga } from './filters'\nimport { saga as appSaga } from './app'\nimport thunk from 'redux-thunk'\n\n\nfunction* rootSaga() {\n    yield all([\n        authSaga(),\n        quotesSaga(),\n        apiSaga(),\n        filtersSaga(),\n        appSaga(),\n    ])\n}\n\nconst persistConfig = {\n    key: 'cache',\n    storage,\n    whitelist: ['user']\n}\n\nconst rootReducer = combineReducers({\n    api: apiReducer,\n    ui: uiReducer,\n    user: userReducer,\n    auth: authReducer,\n    routing: routingReducer,\n    quotes: quotesReducer,\n    authors: authorsReducer,\n    categories: categoriesReducer,\n    tags: tagsReducer,\n    filters: filtersReducer,\n    app: appReducer\n})\n\nconst persistedRootReducer = persistReducer(persistConfig, rootReducer)\n\n\nexport function createRootStore(initialState = {}) {\n    const sagaMiddleware = createSagaMiddleware()\n\n    const store = createReduxStore(\n        persistedRootReducer,\n        initialState,\n        applyMiddleware(\n            thunk,\n            sagaMiddleware\n        )\n    )\n\n    sagaMiddleware.run(rootSaga)\n\n    store.subscribe(() => {\n        console.log(store.getState())\n    })\n\n    return store\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport { createRootStore } from './redux/store'\nimport { Provider } from 'react-redux'\nimport { persistStore } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App'\n\n\nexport const store = createRootStore()\nconst persistor = persistStore(store)\n\n\nReactDOM.render(\n    <Provider store={ store }>\n        <PersistGate loading={ null } persistor={ persistor }>\n            <App/>\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}